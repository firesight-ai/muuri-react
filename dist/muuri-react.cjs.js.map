{
  "version": 3,
  "sources": ["../node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/cjs/react-is.production.min.js", "../node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/cjs/react-is.development.js", "../node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/index.js", "../node_modules/.pnpm/object-assign@4.1.1/node_modules/object-assign/index.js", "../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js", "../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/has.js", "../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/checkPropTypes.js", "../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithTypeCheckers.js", "../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithThrowingShims.js", "../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js", "../src/index.ts", "../src/prototype.ts", "../src/utils/decorators/decorationKey.ts", "../src/utils/decorators/isDecorated.ts", "../src/utils/decorators/addDecoration.ts", "../src/utils/decorators/getDecoration.ts", "../src/utils/decorators/removeDecorations.ts", "../src/components/gridComponent.tsx", "../src/components/itemComponent.tsx", "../src/contexts/gridContext.ts", "../src/contexts/itemContext.ts", "../src/controllers/eventController.ts", "../src/controllers/itemAddController.ts", "../src/invariant.ts", "../src/controllers/itemRefController.ts", "../src/controllers/itemRemoveController.ts", "../src/controllers/layoutController.ts", "../src/controllers/fiberController.ts", "../src/controllers/childrenController.ts", "../src/utils/fillers/fillGrid.ts", "../src/utils/fillers/fillGridElement.ts", "../src/utils/fillers/fillItem.ts", "../src/utils/fillers/fillItemElement.ts", "../src/utils/hooks/useFunction.ts", "../src/utils/hooks/useInstantEffect.ts", "../src/utils/hooks/useReference.ts", "../src/utils/hooks/useMemoized.ts", "../src/utils/hooks/useRerender.ts", "../src/utils/grid/addItems.ts", "../src/utils/grid/filterItems.ts", "../src/utils/grid/getGridClass.ts", "../src/utils/grid/getItemClasses.ts", "../src/utils/grid/hideItems.ts", "../src/utils/grid/removeItems.ts", "../src/utils/grid/showItems.ts", "../src/utils/grid/sortItems.ts", "../src/components/muuriComponent.tsx", "../src/muuri-map.ts", "../src/utils/muuri/getInstance.ts", "../src/utils/muuri/handleRef.ts", "../src/utils/muuri/setDragAutoScroll.ts", "../src/utils/muuri/setDragContainer.ts", "../src/utils/muuri/setDragSort.ts", "../src/utils/muuri/setDragStartPredicate.ts", "../src/hooks/index.ts", "../src/hooks/useData.ts", "../src/hooks/useDrag.ts", "../src/hooks/useDraggable.ts", "../src/hooks/useGrid.ts", "../src/hooks/useRefresh.ts", "../src/hooks/useShow.ts", "../src/hooks/useVisibility.ts", "../src/tools/getResponsiveStyle.ts", "../src/tools/getStaticStyle.ts", "../src/tools/withHooks.tsx"],
  "sourcesContent": ["/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n", "/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n", "module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n", "import Muuri from 'muuri';\r\nimport './prototype';\r\nimport './declare-muuri';\r\n\r\n// Muuri-exports.\r\nexport const AutoScroller = Muuri.AutoScroller;\r\nexport const ItemDrag = Muuri.ItemDrag;\r\n\r\n// Muuri-react exports.\r\nexport * from './components';\r\nexport * from './hooks';\r\nexport * from './contexts';\r\nexport * from './controllers';\r\nexport * from './tools';\r\nexport * from './muuri-map';\r\n", "import Muuri from 'muuri';\r\nimport {getDecoration} from './utils/decorators';\r\n\r\n/**\r\n * Muuri id getter.\r\n *\r\n * @returns - The id of the instance.\r\n */\r\nMuuri.prototype.getId = function getId() {\r\n  return getDecoration(this).id;\r\n};\r\n/**\r\n * Muuri group ids getter.\r\n *\r\n * @returns - The group ids of the instance.\r\n */\r\nMuuri.prototype.getGroupIds = function getGroupIds() {\r\n  return getDecoration(this).groupIds;\r\n};\r\n/**\r\n * Muuri size element getter.\r\n *\r\n * @returns - The group ids of the instance.\r\n */\r\nMuuri.prototype.getSizerElement = function getSizerElement() {\r\n  return getDecoration(this).sizerElement;\r\n};\r\n\r\n/**\r\n * Item key getter.\r\n *\r\n * @returns - The item component key.\r\n */\r\nMuuri.Item.prototype.getKey = function getKey() {\r\n  return getDecoration(this).key;\r\n};\r\n/**\r\n * Item props getter.\r\n *\r\n * @returns - The item component props.\r\n */\r\nMuuri.Item.prototype.getProps = function getProps() {\r\n  return getDecoration(this).props;\r\n};\r\n/**\r\n * Item data getter.\r\n *\r\n * @returns - The item component data.\r\n */\r\nMuuri.Item.prototype.getData = function getData() {\r\n  return getDecoration(this).data;\r\n};\r\n/**\r\n * Item data setter.\r\n *\r\n * @param data - The data.\r\n */\r\nMuuri.Item.prototype.setData = function setData(data: object) {\r\n  getDecoration(this).data = data;\r\n};\r\n", "export default '_component' as const;\r\n", "import key from './decorationKey';\r\nimport type {MaybeDecorated} from '../../interfaces';\r\n\r\n/**\r\n * Return if the instance is decorated.\r\n *\r\n * @param instance - The instance.\r\n * @returns - If the instance is decorated.\r\n */\r\nexport function isDecorated(instance: MaybeDecorated): boolean {\r\n  return !!instance[key];\r\n}\r\n", "import key from './decorationKey';\r\nimport {isDecorated} from './isDecorated';\r\nimport type {MaybeDecorated} from '../../interfaces';\r\n\r\n/**\r\n * Add a decoration to the instance.\r\n *\r\n * @param instance - The instance to decorate.\r\n * @param decoration - The decoration.\r\n */\r\nexport function addDecoration<T extends MaybeDecorated>(\r\n  instance: T,\r\n  decoration: Partial<T[typeof key]>\r\n): void {\r\n  if (isDecorated(instance)) {\r\n    // @ts-ignore\r\n    Object.assign(instance[key], decoration);\r\n  } else {\r\n    instance[key] = {...decoration};\r\n  }\r\n}\r\n", "import key from './decorationKey';\r\nimport type {Decorated} from '../../interfaces';\r\n\r\n/**\r\n * Add a decoration to the instance.\r\n *\r\n * @param instance - The instance to decorate.\r\n * @param decoration - The decoration.\r\n */\r\nexport function getDecoration<T extends Decorated>(instance: T): T[typeof key] {\r\n  return instance[key];\r\n}\r\n", "import type {MaybeDecorated} from '../../interfaces';\r\n\r\n/**\r\n * Remove the decoration from the instance.\r\n *\r\n * @param decorated - The instance.\r\n */\r\nexport function removeDecorations(decorated: MaybeDecorated): void {\r\n  decorated._component = null;\r\n}\r\n", "/* React */\r\nimport React, {createRef, RefObject, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n/* Components */\r\nimport {ItemComponent} from './itemComponent';\r\n/* Context */\r\nimport {GridProvider} from '../contexts';\r\n/* Controllers */\r\nimport {\r\n  ChildrenController,\r\n  FiberController,\r\n  ItemAddController,\r\n  ItemRemoveController,\r\n  LayoutController,\r\n} from '../controllers';\r\n/* Utils */\r\nimport {invariant} from '../invariant';\r\nimport {fillGridElement, fillGrid} from '../utils/fillers';\r\nimport {useReference, useMemoized} from '../utils/hooks';\r\nimport {addDecoration, getDecoration, isDecorated} from '../utils/decorators';\r\nimport {\r\n  addItems,\r\n  filterItems,\r\n  getGridClass,\r\n  getItemClasses,\r\n  hideItems,\r\n  removeItems,\r\n  showItems,\r\n  sortItems,\r\n} from '../utils/grid';\r\n/* Interfaces */\r\nimport type {GridComponentProps, DecoratedItem} from '../interfaces';\r\n\r\n// Grid component.\r\nexport function GridComponent({\r\n  children,\r\n  gridProps,\r\n  grid,\r\n  filter,\r\n  sort,\r\n  sortOptions,\r\n  addOptions,\r\n  propsToData,\r\n  onSend,\r\n  onDragStart,\r\n  onDragEnd,\r\n  onFilter,\r\n  onSort,\r\n  onMount,\r\n  onUnmount,\r\n  forceSync,\r\n  dragFixed,\r\n  dragEnabled,\r\n  instantLayout,\r\n}: GridComponentProps) {\r\n  /* ------------------ */\r\n  /* ----- STORES ----- */\r\n  /* ------------------ */\r\n\r\n  // Store references of objects\r\n  // generated in previous renders.\r\n  const store = useMemoized<{\r\n    // The grid ref.\r\n    gridRef: RefObject<HTMLDivElement>;\r\n    // The grid className.\r\n    gridClass: string;\r\n    // The items classNames.\r\n    itemClasses: string[];\r\n    // Controller that manages the children.\r\n    childrenController: ChildrenController;\r\n    // Controller that manages the fibers.\r\n    fiberController: FiberController;\r\n    // Controller that manages the items to add.\r\n    itemAddController: ItemAddController;\r\n    // Controller that manages the items to remove.\r\n    itemRemoveController: ItemRemoveController;\r\n    // Controller that manages the items layout.\r\n    layoutController: LayoutController;\r\n    // Keep a reference of the onUnmount function.\r\n    onUnmount?: GridComponentProps['onUnmount'];\r\n    // Keep a reference of the onDragStart function.\r\n    onDragStart?: GridComponentProps['onDragStart'];\r\n    // Keep a reference of the onDragEnd function.\r\n    onDragEnd?: GridComponentProps['onDragEnd'];\r\n    // Keep a reference of the onFilter function.\r\n    onFilter?: GridComponentProps['onFilter'];\r\n    // Keep a reference of the onSort function.\r\n    onSort?: GridComponentProps['onSort'];\r\n    // Keep a reference of the onSend function.\r\n    onSend?: GridComponentProps['onSend'];\r\n  }>(() => ({\r\n    // Grid and items data.\r\n    gridRef: /*      */ createRef(),\r\n    gridClass: /*    */ getGridClass(grid),\r\n    itemClasses: /*  */ getItemClasses(grid),\r\n    // Controllers.\r\n    childrenController: /*    */ new ChildrenController(),\r\n    fiberController: /*       */ new FiberController(),\r\n    itemAddController: /*     */ new ItemAddController(),\r\n    itemRemoveController: /*  */ new ItemRemoveController(),\r\n    layoutController: /*      */ new LayoutController(),\r\n    // Events.\r\n    onUnmount,\r\n    onDragStart,\r\n    onDragEnd,\r\n    onFilter,\r\n    onSort,\r\n    onSend,\r\n  }));\r\n\r\n  // Store references of objects\r\n  // that are used inside useEffect.\r\n  // The references are flushed on each new render.\r\n  const vars: {\r\n    /** The positions of the new items. */\r\n    indicesToAdd: number[];\r\n    /** The DOM elements of the new items. */\r\n    addedDOMItems: HTMLElement[];\r\n    /** The items instances to remove. */\r\n    itemsToRemove: DecoratedItem[];\r\n    /** The items instances to refresh. */\r\n    itemsToRefresh: DecoratedItem[];\r\n    /** The items instances to show. */\r\n    itemsToShow: DecoratedItem[];\r\n    /** The items instances to hide. */\r\n    itemsToHide: DecoratedItem[];\r\n    /** If an item has been added. */\r\n    hasAdded: boolean;\r\n    /** If an item has been removed. */\r\n    hasRemoved: boolean;\r\n    /** If the grid has been filtered. */\r\n    hasFiltered: boolean;\r\n    /** If the grid has been sorted. */\r\n    hasSorted: boolean;\r\n    /** If an item has been refreshed. */\r\n    hasRefreshed: boolean;\r\n    /** If an item has been shown. */\r\n    hasShown: boolean;\r\n    /** If an item has been hiiden. */\r\n    hasHidden: boolean;\r\n  } = {\r\n    // Items data.\r\n    indicesToAdd: /*   */ [],\r\n    addedDOMItems: /*  */ [],\r\n    itemsToRemove: /*  */ [],\r\n    itemsToRefresh: /* */ [],\r\n    itemsToShow: /*    */ [],\r\n    itemsToHide: /*    */ [],\r\n    // Items flags.\r\n    hasAdded: /*      */ false,\r\n    hasRemoved: /*    */ false,\r\n    hasFiltered: /*   */ false,\r\n    hasSorted: /*     */ false,\r\n    hasRefreshed: /*  */ false,\r\n    hasShown: /*      */ false,\r\n    hasHidden: /*     */ false,\r\n  };\r\n\r\n  /* ----------------- */\r\n  /* ----- MOUNT ----- */\r\n  /* ----------------- */\r\n\r\n  // Initialize the grid on mount.\r\n  useEffect(() => {\r\n    /* ------------------ */\r\n    /* ----- EVENTS ----- */\r\n    /* ------------------ */\r\n\r\n    // Add all the event handlers.\r\n    grid\r\n      // \"Send\" and \"receive\" events.\r\n      .on('beforeSend', ({item, fromGrid, fromIndex}) => {\r\n        if (!getDecoration(item).sentPayload) {\r\n          // Generate the sentPayload.\r\n          const sentPayload = {\r\n            fromChildrenController: store.childrenController,\r\n            fromFiberController: store.fiberController,\r\n            fromGrid,\r\n            fromIndex,\r\n          };\r\n\r\n          // Add the decoration.\r\n          addDecoration(item, {sentPayload});\r\n        }\r\n      })\r\n      .on('receive', ({item, toGrid, toIndex}) => {\r\n        // Controllers.\r\n        const toChildrenController = store.childrenController;\r\n        const toFiberController = store.fiberController;\r\n\r\n        // If the method is activated by user interaction (the item is being dragged)\r\n        // the synchronization will be performed during the \"dragEnd\" event.\r\n        // If the method is called via Muuri's instance (the item is not being dragged)\r\n        // the synchronization takes place here, but the onSend callback is not fired.\r\n        if (item.isDragging()) {\r\n          // Generate the receivedPayload.\r\n          const receivedPayload = {\r\n            toChildrenController,\r\n            toFiberController,\r\n            toGrid,\r\n            toIndex,\r\n          };\r\n\r\n          // Add the decoration.\r\n          addDecoration(item, {receivedPayload});\r\n        } else {\r\n          // Payloads data.\r\n          const sentPayload = getDecoration(item).sentPayload;\r\n          // The payload must have been created in the send method.\r\n          invariant(sentPayload !== null && typeof sentPayload === 'object');\r\n          // Controllers.\r\n          const {fromChildrenController, fromFiberController} = sentPayload;\r\n\r\n          // Remove the payload.\r\n          addDecoration(item, {sentPayload: null});\r\n\r\n          // Remove the item instances from the old GridComponent.\r\n          const itemFiber = fromFiberController.remove(item.getKey());\r\n          const itemComponent = fromChildrenController.remove(itemFiber.index);\r\n\r\n          // Add the item instances to the new GridComponent.\r\n          toFiberController.append(itemFiber);\r\n          toChildrenController.append(itemComponent);\r\n        }\r\n\r\n        // Emit the \"send\" event.\r\n        getDecoration(item).eventController.emitEvent('send', grid);\r\n      })\r\n\r\n      // Drag events.\r\n      .on('dragInit', (item, event) => {\r\n        // The childrenController must change the positions of\r\n        // the newly added components if any items are being\r\n        // dragged to add the safely.\r\n        store.childrenController.incrementDragCounter();\r\n        // Emit the \"drag\" event.\r\n        // This event is used instead of \"dragStart\" to allow the\r\n        // reRender of the component when the item is not inside\r\n        // the dragContainer, this makes it possible to change\r\n        // the style of the element safely (e.g. using relative dimensions).\r\n        getDecoration(item).eventController.emitEvent('drag', true);\r\n        // \"onDragStart\" Callback.\r\n        if (store.onDragStart) store.onDragStart(item, event);\r\n      })\r\n      .on('dragEnd', (item) => {\r\n        // Payloads.\r\n        const sentPayload = getDecoration(item).sentPayload;\r\n        const receivedPayload = getDecoration(item).receivedPayload;\r\n\r\n        // If an item was sent during the drag the\r\n        // GridComponents are synchronized.\r\n        if (sentPayload && receivedPayload) {\r\n          // SentPayload data.\r\n          const {\r\n            fromChildrenController,\r\n            fromFiberController,\r\n            fromGrid,\r\n            fromIndex,\r\n          } = sentPayload;\r\n\r\n          // ReceivedPayload data.\r\n          const {\r\n            toChildrenController,\r\n            toFiberController,\r\n            toGrid,\r\n            toIndex,\r\n          } = receivedPayload;\r\n\r\n          // Reset the payloads.\r\n          addDecoration(item, {sentPayload: null, receivedPayload: null});\r\n\r\n          // Check if the item has been sended.\r\n          if (fromGrid !== toGrid) {\r\n            // \"onSend\" will be called with the receive event.\r\n            invariant(\r\n              typeof store.onSend === 'function',\r\n              'An item cannot be sent to another MuuriComponent if the ' +\r\n                \"'onSend' property has not been passed to the MuuriComponent.\"\r\n            );\r\n\r\n            // Remove the item instances from the old GridComponent.\r\n            const itemFiber = fromFiberController.remove(item.getKey());\r\n            const itemComponent = fromChildrenController.remove(\r\n              itemFiber.index\r\n            );\r\n\r\n            // Add the item instances to the new GridComponent.\r\n            toFiberController.append(itemFiber);\r\n            toChildrenController.append(itemComponent);\r\n\r\n            // \"onSend\" callback.\r\n            // DragEnd is called in the grid where\r\n            // the drag start, so onSend.\r\n            store.onSend({\r\n              // The key the user has set.\r\n              key: getDecoration(item).key,\r\n              // From.\r\n              fromGrid,\r\n              fromIndex,\r\n              fromId: getDecoration(fromGrid).id,\r\n              fromGroupIds: getDecoration(fromGrid).groupIds,\r\n              // To.\r\n              toGrid,\r\n              toIndex,\r\n              toId: getDecoration(toGrid).id,\r\n              toGroupIds: getDecoration(toGrid).groupIds,\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .on('dragReleaseEnd', (item) => {\r\n        // The childrenController must change the positions of\r\n        // the newly added components if any items are being\r\n        // dragged to add the safely.\r\n        store.childrenController.decrementDragCounter();\r\n        // Emit the event.\r\n        // This event is used instead of \"dragEnd\" to allow the\r\n        // reRender of the component when the item is not inside\r\n        // the dragContainer, this makes it possible to change\r\n        // the style of the element safely (e.g. using relative dimensions).\r\n        getDecoration(item).eventController.emitEvent('drag', false);\r\n        // Call the event.\r\n        if (store.onDragEnd) store.onDragEnd(item);\r\n      })\r\n\r\n      // Show and hide events.\r\n      .on('showStart', (items) => {\r\n        // The items could be shown before they are decorated.\r\n        if (!isDecorated(items[0])) return;\r\n        // Emit the event.\r\n        items.forEach((item) => {\r\n          const eventController = getDecoration(item).eventController;\r\n          // The event is triggered also for items that have not\r\n          // changed their \"visibility\" state.\r\n          // This check is done to avoid useless re-rendering.\r\n          if (eventController.getPayload('show') !== true) {\r\n            eventController.emitEvent('show', true);\r\n          }\r\n        });\r\n      })\r\n      .on('hideEnd', (items) => {\r\n        // Emit the event.\r\n        items.forEach((item) => {\r\n          const eventController = getDecoration(item).eventController;\r\n          // The event is triggered also for items that have not\r\n          // changed their \"visibility\" state.\r\n          // This check is done to avoid useless re-rendering.\r\n          if (eventController.getPayload('show') !== false) {\r\n            eventController.emitEvent('show', false);\r\n          }\r\n        });\r\n      })\r\n\r\n      // Filter and sort events.\r\n      .on('filter', (shownItems, hiddenItems) => {\r\n        if (store.onFilter) store.onFilter(shownItems, hiddenItems);\r\n      })\r\n      .on('sort', (currentOrder, previousOrder) => {\r\n        if (store.onSort) store.onSort(currentOrder, previousOrder);\r\n      });\r\n\r\n    // Fix the dimensions of the items when they are dragged.\r\n    if (dragFixed) {\r\n      grid\r\n        .on('dragInit', (item) => {\r\n          // Let's set fixed widht/height to the dragged item\r\n          // so that it does not stretch unwillingly when\r\n          // it's appended to the document body for the\r\n          // duration of the drag.\r\n          const element = item.getElement();\r\n          // The element must exist.\r\n          invariant(element !== undefined);\r\n          // Get the computed dimensions.\r\n          const {width, height, paddingTop} = getComputedStyle(element);\r\n          // Save the previous style in case it was setted.\r\n          addDecoration(item, {\r\n            dragWidth: element.style.width,\r\n            dragHeight: element.style.height,\r\n            dragPaddingTop: element.style.paddingTop,\r\n          });\r\n          // Set the new style.\r\n          element.style.width = width;\r\n          element.style.height = height;\r\n          element.style.paddingTop = paddingTop;\r\n        })\r\n        .on('dragReleaseEnd', (item) => {\r\n          // Let's remove the fixed width/height from the\r\n          // dragged item now that it is back in a grid\r\n          // column and can freely adjust to it's\r\n          // surroundings.\r\n          const element = item.getElement();\r\n          // The element must exist.\r\n          invariant(element !== undefined);\r\n          // Get the old style.\r\n          const {dragWidth, dragHeight, dragPaddingTop} = getDecoration(item);\r\n          // Restore the previous style in case it was setted.\r\n          element.style.width = dragWidth;\r\n          element.style.height = dragHeight;\r\n          element.style.paddingTop = dragPaddingTop;\r\n        });\r\n    }\r\n\r\n    /* ---------------- */\r\n    /* ----- GRID ----- */\r\n    /* -----------------*/\r\n\r\n    // Check .\r\n    invariant(store.gridRef.current !== null);\r\n\r\n    // Work with the grid.\r\n    // @ts-ignore\r\n    grid._element = store.gridRef.current;\r\n    fillGridElement(store.gridRef.current, store.gridClass);\r\n    fillGrid(grid);\r\n\r\n    // \"onMount\" Callback.\r\n    if (onMount) onMount(grid);\r\n\r\n    // Delete the instance from the global map.\r\n    return () => {\r\n      // Destroy the controllers.\r\n      store.childrenController.destroy();\r\n      store.fiberController.destroy();\r\n      store.itemRemoveController.destroy();\r\n      store.itemAddController.destroy();\r\n      store.layoutController.destroy();\r\n    };\r\n  }, []); // eslint-disable-line\r\n\r\n  /* ---------------- */\r\n  /* ----- INIT ----- */\r\n  /* -----------------*/\r\n\r\n  // Init the controllers.\r\n  store.childrenController.useInit(children);\r\n  store.fiberController.useInit(store.gridRef);\r\n  store.itemRemoveController.useInit();\r\n  store.itemAddController.useInit();\r\n  store.layoutController.useInit();\r\n\r\n  // IsChanged flags.\r\n  const isFilterChanged = useReference([filter]);\r\n  const isSortChanged = useReference([sort, sortOptions]);\r\n\r\n  // Get items to add/remove.\r\n  useEffect(() => {\r\n    // Set drag enabled option.\r\n    addDecoration(grid, {dragEnabled});\r\n\r\n    // Set the items data.\r\n    vars.indicesToAdd = store.childrenController.getIndicesToAdd();\r\n    vars.addedDOMItems = store.fiberController.getStateNodes(vars.indicesToAdd);\r\n    vars.itemsToRemove = store.itemRemoveController.getItemsToRemove();\r\n    vars.itemsToRefresh = store.layoutController.getItemsToRefresh();\r\n    vars.itemsToShow = store.layoutController.getItemsToShow();\r\n    vars.itemsToHide = store.layoutController.getItemsToHide();\r\n\r\n    // This will remove lot of the implementation\r\n    // problems for the user.\r\n    store.onUnmount = onUnmount;\r\n    store.onDragStart = onDragStart;\r\n    store.onDragEnd = onDragEnd;\r\n    store.onFilter = onFilter;\r\n    store.onSort = onSort;\r\n    store.onSend = onSend;\r\n  });\r\n\r\n  /* ------------------- */\r\n  /* ----- ACTIONS ----- */\r\n  /* ------------------- */\r\n\r\n  useEffect(() => {\r\n    /* ---------------------- */\r\n    /* ---- ADD & REMOVE ---- */\r\n    /* ---------------------- */\r\n\r\n    // Remove items.\r\n    if (vars.itemsToRemove.length) {\r\n      removeItems(grid, vars.itemsToRemove);\r\n      // Set the flag.\r\n      vars.hasRemoved = true;\r\n    }\r\n\r\n    // Add items after the old ones are removed\r\n    // to add them in the right positions.\r\n    if (vars.indicesToAdd.length) {\r\n      addItems(grid, vars.addedDOMItems, vars.indicesToAdd, addOptions, filter);\r\n      // New Items.\r\n      const addedItems = grid.getItems(vars.indicesToAdd);\r\n      // Emit the new items to the itemComponents.\r\n      store.itemAddController.emit(addedItems);\r\n      // Set the flag.\r\n      vars.hasAdded = true;\r\n    }\r\n\r\n    /* ------------------------- */\r\n    /* ----- SORT & FILTER ----- */\r\n    /* ------------------------- */\r\n\r\n    // Filter items.\r\n    if (filter && (isFilterChanged || vars.hasAdded || forceSync)) {\r\n      filterItems(grid, filter);\r\n      // Set the flag.\r\n      vars.hasFiltered = true;\r\n    }\r\n\r\n    // Sort items.\r\n    if (sort && (isSortChanged || vars.hasAdded || forceSync)) {\r\n      sortItems(grid, sort, sortOptions);\r\n      // Set the flag.\r\n      vars.hasSorted = true;\r\n    }\r\n\r\n    /* ----------------------- */\r\n    /* ----- SHOW & HIDE ----- */\r\n    /* ----------------------- */\r\n\r\n    // Filter has priority on the items visibility.\r\n    if (!filter && vars.itemsToShow.length) {\r\n      showItems(grid, vars.itemsToShow);\r\n      // Set the flag.\r\n      vars.hasShown = true;\r\n    }\r\n\r\n    // Filter has priority on the items visibility.\r\n    if (!filter && vars.itemsToHide.length) {\r\n      hideItems(grid, vars.itemsToHide);\r\n      // Set the flag.\r\n      vars.hasHidden = true;\r\n    }\r\n\r\n    /* ------------------- */\r\n    /* ----- REFRESH ----- */\r\n    /* ------------------- */\r\n\r\n    // Items with dimensions to refresh.\r\n    if (vars.itemsToRefresh.length) {\r\n      grid.refreshItems(vars.itemsToRefresh);\r\n      // Set the flag.\r\n      vars.hasRefreshed = true;\r\n    }\r\n\r\n    /* ------------------ */\r\n    /* ----- LAYOUT ----- */\r\n    /* ------------------ */\r\n\r\n    // Layout is calculated only in the end.\r\n    // Check the previous flags.\r\n    if (\r\n      vars.hasAdded ||\r\n      vars.hasRemoved ||\r\n      vars.hasSorted ||\r\n      vars.hasFiltered ||\r\n      vars.hasRefreshed ||\r\n      vars.hasShown ||\r\n      vars.hasHidden\r\n    ) {\r\n      grid.layout(instantLayout);\r\n    }\r\n  });\r\n\r\n  /* ------------------ */\r\n  /* ----- RENDER ----- */\r\n  /* ------------------ */\r\n\r\n  // Provided value doesn't change the reference.\r\n  const value = useMemoized(() => ({\r\n    layoutController: store.layoutController,\r\n    grid,\r\n  }));\r\n\r\n  // render.\r\n  return (\r\n    <GridProvider value={value}>\r\n      <div\r\n        {...gridProps}\r\n        ref={store.gridRef}\r\n        {...store.fiberController.getFlagProp()}>\r\n        {/** The children controller handle some memoization */}\r\n        {store.childrenController.render((child, key) => (\r\n          <ItemComponent\r\n            key={key}\r\n            itemKey={key}\r\n            grid={grid}\r\n            propsToData={propsToData}\r\n            itemClasses={store.itemClasses}\r\n            itemAddController={store.itemAddController}\r\n            itemRemoveController={store.itemRemoveController}>\r\n            {child}\r\n          </ItemComponent>\r\n        ))}\r\n      </div>\r\n    </GridProvider>\r\n  );\r\n}\r\n\r\n// Proptypes.\r\nGridComponent.propTypes = {\r\n  grid: PropTypes.object.isRequired,\r\n  gridProps: PropTypes.object,\r\n  filter: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n  sort: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func,\r\n    PropTypes.arrayOf(PropTypes.string),\r\n  ]),\r\n  sortOptions: PropTypes.exact({\r\n    descending: PropTypes.bool,\r\n  }),\r\n  addOptions: PropTypes.exact({\r\n    show: PropTypes.bool,\r\n  }),\r\n  onSend: PropTypes.func,\r\n  onDragStart: PropTypes.func,\r\n  onDragEnd: PropTypes.func,\r\n  onFilter: PropTypes.func,\r\n  onSort: PropTypes.func,\r\n  onMount: PropTypes.func,\r\n  onUnmount: PropTypes.func,\r\n  forceSync: PropTypes.bool,\r\n  dragFixed: PropTypes.bool,\r\n  dragEnabled: PropTypes.bool,\r\n  instantLayout: PropTypes.bool,\r\n};\r\n\r\n// Default props.\r\nGridComponent.defaultProps = {\r\n  gridProps: {},\r\n  addOptions: {show: true},\r\n  sortOptions: {descending: false},\r\n  forceSync: false,\r\n  dragFixed: false,\r\n  dragEnabled: false,\r\n  instantLayout: false,\r\n};\r\n\r\n// Display name.\r\nGridComponent.displayName = 'GridComponent';\r\n", "/* React */\r\nimport React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n/** Muuri */\r\nimport Muuri from 'muuri';\r\n/* Context */\r\nimport {ItemProvider} from '../contexts';\r\n/* Controllers */\r\nimport {EventController, ItemRefController} from '../controllers';\r\n/* Utils */\r\nimport {fillItem, fillItemElement} from '../utils/fillers';\r\nimport {useMemoized} from '../utils/hooks';\r\nimport {invariant} from '../invariant';\r\n/** Interfaces */\r\nimport type {ItemComponentProps} from '../interfaces';\r\n\r\n// Item component.\r\nexport function ItemComponent({\r\n  children: child,\r\n  itemClasses,\r\n  itemAddController,\r\n  itemRemoveController,\r\n  propsToData,\r\n  itemKey,\r\n  grid,\r\n}: ItemComponentProps) {\r\n  // The store provided doesn't change the reference.\r\n  const store = useMemoized(() => {\r\n    // Create the controllers.\r\n    const eventController = new EventController();\r\n    const itemRefController = new ItemRefController();\r\n    // Add the data that won't change.\r\n    itemRefController.set('key', itemKey);\r\n    itemRefController.set('eventController', eventController);\r\n    // Return the controllers.\r\n    return {eventController, itemRefController, itemRemoveController, grid};\r\n  });\r\n\r\n  // Set the props.\r\n  store.itemRefController.set('props', child.props);\r\n  store.itemRemoveController = itemRemoveController;\r\n  store.grid = grid;\r\n\r\n  // Set the data.\r\n  if (propsToData) {\r\n    // Get the data.\r\n    const data = propsToData(child.props);\r\n\r\n    // Must be an object.\r\n    invariant(\r\n      typeof data === 'object',\r\n      `The data returned by 'propsToData' must be an object, founded ${typeof data}`\r\n    );\r\n\r\n    // Set the data.\r\n    store.itemRefController.set('data', data);\r\n  }\r\n\r\n  // On mount.\r\n  useEffect(() => {\r\n    // Request the item.\r\n    itemAddController.requestItem((item) => {\r\n      fillItem(item);\r\n      // @ts-ignore\r\n      fillItemElement(item.getElement(), itemClasses);\r\n      store.itemRefController.setItem(item);\r\n    });\r\n\r\n    return () => {\r\n      // The item.\r\n      const item = store.itemRefController.getItem();\r\n      invariant(item !== null);\r\n\r\n      // The element.\r\n      const element = item.getElement();\r\n      invariant(element !== undefined);\r\n\r\n      // If the item is going to be unmounted\r\n      // and it is being dragged it have to end the event\r\n      // (Because it could be child of a different DOM element).\r\n      if (item.isDragging()) {\r\n        element.style.display = 'none';\r\n        element.style.visibility = 'hidden';\r\n\r\n        // @ts-ignore\r\n        if (item._drag) item._drag.destroy();\r\n        store.grid.getElement().appendChild(element);\r\n      }\r\n\r\n      // Remove the item.\r\n      store.itemRefController.delete();\r\n      store.itemRemoveController.removeItem(item);\r\n\r\n      // Destroy the controllers instances.\r\n      store.itemRefController.destroy();\r\n      store.eventController.destroy();\r\n    };\r\n  }, []); // eslint-disable-line\r\n\r\n  // Render.\r\n  return <ItemProvider value={store}>{child}</ItemProvider>;\r\n}\r\n\r\n// PropTypes.\r\nItemComponent.propTypes = {\r\n  itemAddController: PropTypes.object.isRequired,\r\n  itemClasses: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  propsToData: PropTypes.func,\r\n  children: PropTypes.element.isRequired,\r\n  grid: PropTypes.instanceOf(Muuri).isRequired,\r\n};\r\n\r\n// Display name.\r\nItemComponent.displayName = 'ItemComponent';\r\n", "import {createContext, useContext} from 'react';\r\nimport type {DecoratedGrid} from '../interfaces';\r\nimport type {LayoutController} from '../controllers';\r\n\r\n// Context value shape.\r\nexport type GridContextValue = {\r\n  grid: DecoratedGrid;\r\n  layoutController: LayoutController;\r\n};\r\n\r\n// Grid context.\r\nexport const GridContext = createContext<Partial<GridContextValue>>({});\r\n// Grid provider.\r\nexport const GridProvider = GridContext.Provider;\r\n// Grid context hook.\r\nexport const useGridContext = () => useContext(GridContext);\r\n// Grid provider display name.\r\nGridContext.displayName = 'GridProvider';\r\n", "import {createContext, useContext} from 'react';\r\nimport type {ItemRefController, EventController} from '../controllers';\r\n\r\n// Context value shape.\r\nexport type ItemContextValue = {\r\n  itemRefController: ItemRefController;\r\n  eventController: EventController;\r\n};\r\n\r\n// Item context.\r\nexport const ItemContext = createContext<Partial<ItemContextValue>>({});\r\n// Item provider.\r\nexport const ItemProvider = ItemContext.Provider;\r\n// Item context hook.\r\nexport const useItemContext = () => useContext(ItemContext);\r\n// Item provider display name.\r\nItemContext.displayName = 'ItemProvider';\r\n", "/**\r\n * CONTROLLER: ITEM\r\n *\r\n * The purpose of this controller is to manage the\r\n * events trigger to the specific item the controller is assigned to.\r\n * This controllers is used by the hooks to re-render the components.\r\n */\r\nexport class EventController {\r\n  /** Map of <event, callback> */\r\n  _eventsMap = new Map<string, () => void>();\r\n  /** Map of <event, payload> */\r\n  _payloadsMap = new Map<string, any>();\r\n\r\n  /**\r\n   * Enable an event, it can be emitted.\r\n   *\r\n   * @param event - The event name.\r\n   * @param emitter - The callback.\r\n   */\r\n  enableEvent(event: string, emitter: () => void): void {\r\n    this._eventsMap.set(event, emitter);\r\n  }\r\n\r\n  /**\r\n   * Set an event payload and emit it the event.\r\n   *\r\n   * @param event - The event name.\r\n   * @param payload - The payload.\r\n   */\r\n  emitEvent(event: string, payload: any): void {\r\n    if (this.isEnabled(event)) {\r\n      this._payloadsMap.set(event, payload);\r\n      // @ts-ignore\r\n      this._eventsMap.get(event)();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the payload of the event.\r\n   *\r\n   * @param event - The event.\r\n   * @returns - The payload.\r\n   */\r\n  getPayload(event: string): any {\r\n    return this._payloadsMap.get(event);\r\n  }\r\n\r\n  /**\r\n   * Returns if at least an event is enabled.\r\n   *\r\n   * @param event - The event.\r\n   * @returns - If at least an event is enabled.\r\n   */\r\n  isEnabled(event: string): boolean {\r\n    return this._eventsMap.has(event);\r\n  }\r\n\r\n  /**\r\n   * Destroy the instance.\r\n   */\r\n  destroy() {\r\n    this._eventsMap.clear();\r\n    this._payloadsMap.clear();\r\n  }\r\n}\r\n", "import type {DecoratedItem} from '../interfaces';\r\n\r\n/**\r\n * CONTROLLER: GRID -> ITEM\r\n *\r\n * The purpose of this controller is to pass to the\r\n * ItemComponents the items instances.\r\n * This can be done without knowing the added items and\r\n * relying only on the useEffect call order of the added items.\r\n */\r\nexport class ItemAddController {\r\n  /** The ItemComponents requests. */\r\n  _requests: ((item: DecoratedItem) => void)[] = [];\r\n\r\n  /**\r\n   * Clear the requests.\r\n   */\r\n  useInit(): void {\r\n    this._requests = [];\r\n  }\r\n\r\n  /**\r\n   * Emit the new items to the\r\n   * components that made a request.\r\n   *\r\n   * @param items - The items.\r\n   */\r\n  emit(items: DecoratedItem[]): void {\r\n    for (let i = 0; i < this._requests.length; i++) {\r\n      this._requests[i](items[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request an item.\r\n   *\r\n   * @param cb - The callback.\r\n   */\r\n  requestItem(cb: (item: DecoratedItem) => void): void {\r\n    this._requests.push(cb);\r\n  }\r\n\r\n  /**\r\n   * Destroy the instance.\r\n   */\r\n  destroy(): void {\r\n    this._requests = [];\r\n  }\r\n}\r\n", "const isProduction = process.env.NODE_ENV === 'production';\r\nconst prefix = 'Invariant failed';\r\n\r\n// Invarianto instance\r\nexport class Invariant extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n\r\n    this.name = 'Invariant';\r\n  }\r\n}\r\n\r\n// Throw an error if the condition fails\r\nexport function invariant(\r\n  condition: boolean,\r\n  message?: string\r\n): asserts condition {\r\n  if (condition) {\r\n    return;\r\n  }\r\n\r\n  if (isProduction) {\r\n    // In production we strip the message but still throw\r\n    throw new Invariant(prefix);\r\n  } else {\r\n    // When not in production we allow the message to pass through\r\n    // *This block will be removed in production builds*\r\n    throw new Invariant(`${prefix}: ${message || ''}`);\r\n  }\r\n}\r\n", "import {invariant} from '../invariant';\r\nimport {\r\n  addDecoration,\r\n  getDecoration,\r\n  removeDecorations,\r\n} from '../utils/decorators';\r\nimport type {DecoratedItem, ItemDecoration} from '../interfaces';\r\n\r\n/*\r\n * CONTROLLER: ITEM\r\n *\r\n * The purpose of this controller is to make possible\r\n * to set data in the item also if\r\n * it has not been created yet.\r\n */\r\nexport class ItemRefController {\r\n  /** The item. */\r\n  _item: DecoratedItem | null = null;\r\n  /** The temporary instance to hold the item's data. */\r\n  _instance: Partial<ItemDecoration> = {};\r\n\r\n  /**\r\n   * Set a decoration in the item.\r\n   *\r\n   * @param key - The decoration key.\r\n   * @param value - The decoration.\r\n   */\r\n  set<T extends keyof ItemDecoration>(key: T, value: ItemDecoration[T]): void {\r\n    if (this._item) {\r\n      addDecoration(this._item, {[key]: value});\r\n    } else {\r\n      this._instance[key] = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a decoration value from the item.\r\n   *\r\n   * @param key - The decoration key.\r\n   * @returns - The decoration value.\r\n   */\r\n  get<T extends keyof ItemDecoration>(key: T): any {\r\n    if (this._item) {\r\n      return getDecoration(this._item)[key];\r\n    } else {\r\n      return this._instance[key];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all the decorations from the item.\r\n   */\r\n  delete(): void {\r\n    if (this._item) removeDecorations(this._item);\r\n  }\r\n\r\n  /**\r\n   * Set the item in the controller.\r\n   *\r\n   * @param item - The item.\r\n   */\r\n  setItem(item: DecoratedItem): void {\r\n    this._item = item;\r\n    addDecoration(this._item, this._instance);\r\n    this._instance = {};\r\n  }\r\n\r\n  /**\r\n   * Item getter.\r\n   *\r\n   * @returns - The item.\r\n   */\r\n  getItem(): DecoratedItem {\r\n    invariant(this._item !== null, 'The item has not been setted yet');\r\n    return this._item;\r\n  }\r\n\r\n  /**\r\n   * Returns if the item has been setted.\r\n   *\r\n   * @returns - If the item has been setted.\r\n   */\r\n  hasItem(): boolean {\r\n    return this._item !== null;\r\n  }\r\n\r\n  /**\r\n   * Destroy the instance.\r\n   */\r\n  destroy(): void {\r\n    this._item = null;\r\n    this._instance = {};\r\n  }\r\n}\r\n", "import type {DecoratedItem} from '../interfaces';\r\n\r\n/**\r\n * CONTROLLER: GRID -> ITEM\r\n *\r\n * The purpose of this controller is to find the items to remove\r\n * based only on the unmount of the ItemComponents.\r\n */\r\nexport class ItemRemoveController {\r\n  /** The items to remove. */\r\n  _itemsToRemove: DecoratedItem[] = [];\r\n\r\n  /**\r\n   * Initialize.\r\n   */\r\n  useInit(): void {\r\n    this._itemsToRemove = [];\r\n  }\r\n\r\n  /**\r\n   * Request an item to be removed.\r\n   *\r\n   * @param item - The item to be removed.\r\n   */\r\n  removeItem(item: DecoratedItem): void {\r\n    this._itemsToRemove.push(item);\r\n  }\r\n\r\n  /**\r\n   * Return all the items to remove.\r\n   */\r\n  getItemsToRemove(): DecoratedItem[] {\r\n    return this._itemsToRemove;\r\n  }\r\n\r\n  /**\r\n   * Destroy the instance.\r\n   */\r\n  destroy(): void {\r\n    this._itemsToRemove = [];\r\n  }\r\n}\r\n", "import {useEffect} from 'react';\r\nimport type {DecoratedItem} from '../interfaces';\r\n\r\n/**\r\n * CONTROLLER: GRID -> ITEMCONTEXT\r\n *\r\n * The purpose of this controller is to synchronize the calculation\r\n * of the layout following changes that have occurred within an item.\r\n * If the GridComponent is re-rendering allow to calculate a\r\n * single layout and greatly optimize the performance.\r\n */\r\nexport class LayoutController {\r\n  /** The items to refresh. */\r\n  _itemsToRefresh: DecoratedItem[];\r\n  /** The items to show. */\r\n  _itemsToShow: DecoratedItem[];\r\n  /** The items to hide. */\r\n  _itemsToHide: DecoratedItem[];\r\n  /** If the MuuriComponent parent is rendering. */\r\n  _isRendering: boolean;\r\n\r\n  /** Constructor. */\r\n  constructor() {\r\n    this._itemsToRefresh = [];\r\n    this._itemsToShow = [];\r\n    this._itemsToHide = [];\r\n    this._isRendering = false;\r\n  }\r\n\r\n  /**\r\n   * Init.\r\n   */\r\n  useInit(): void {\r\n    // Items.\r\n    this._itemsToRefresh = [];\r\n    this._itemsToShow = [];\r\n    this._itemsToHide = [];\r\n    // State.\r\n    this._isRendering = true;\r\n    // Change state.\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n      this._isRendering = false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Refresh an item.\r\n   *\r\n   * @param item - The item to refresh.\r\n   */\r\n  refreshItem(item: DecoratedItem): void {\r\n    // If the component is rendering within the MuuriComponent.\r\n    if (this._isRendering) {\r\n      // The layout is managed by the MuuriComponent\r\n      // (Performance purpose).\r\n      this._itemsToRefresh.push(item);\r\n    } else {\r\n      // If the item is changing parent this\r\n      // will get the right parent.\r\n      const grid = item.getGrid();\r\n      // The layout is managed here.\r\n      grid.refreshItems([item]);\r\n      grid.layout();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set an item visibility.\r\n   *\r\n   * @param item - The item.\r\n   * @param visible - The visibility.\r\n   * @param instant - If the visibility change should happen without animations.\r\n   */\r\n  setItemVisibility(\r\n    item: DecoratedItem,\r\n    visible: boolean,\r\n    instant: boolean\r\n  ): void {\r\n    // If the component is rendering within the MuuriComponent.\r\n    if (this._isRendering) {\r\n      // The layout is managed by the MuuriComponent\r\n      // (Performance purpose).\r\n      if (visible) this._itemsToShow.push(item);\r\n      else this._itemsToHide.push(item);\r\n    } else {\r\n      // If the item is changing parent this\r\n      // will get the right parent.\r\n      const grid = item.getGrid();\r\n      // The layout is managed here.\r\n      if (visible) grid.show([item], {instant});\r\n      else grid.hide([item], {instant});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the items that have to be refreshed.\r\n   *\r\n   * @returns - The items.\r\n   */\r\n  getItemsToRefresh(): DecoratedItem[] {\r\n    return this._itemsToRefresh;\r\n  }\r\n\r\n  /**\r\n   * Get the items that have to be shown.\r\n   *\r\n   * @returns - The items.\r\n   */\r\n  getItemsToShow(): DecoratedItem[] {\r\n    return this._itemsToShow;\r\n  }\r\n\r\n  /**\r\n   * Get the items that have to be hidden.\r\n   *\r\n   * @returns - The items.\r\n   */\r\n  getItemsToHide(): DecoratedItem[] {\r\n    return this._itemsToHide;\r\n  }\r\n\r\n  /**\r\n   * Destroy the instance.\r\n   */\r\n  destroy(): void {\r\n    this._itemsToRefresh = [];\r\n    this._itemsToShow = [];\r\n    this._itemsToHide = [];\r\n  }\r\n}\r\n", "import {useEffect} from 'react';\r\nimport type {RefObject, Key} from 'react';\r\nimport {invariant} from '../invariant';\r\nimport type {\r\n  Fiber,\r\n  Flag,\r\n  GridElementFiber,\r\n  ItemComponentFiber,\r\n} from '../interfaces';\r\n\r\n/**\r\n * CONTROLLER: GRID\r\n *\r\n * The purpose of this controller is to manage the fiber node of the GridElements.\r\n * The Fiber nodes allow to manage reparenting and easily access new added items elements.\r\n */\r\nexport class FiberController {\r\n  /** The fiber of the grid Element that contains all the ItemComponents. */\r\n  // @ts-ignore\r\n  _fiber: GridElementFiber;\r\n  /** The current flag value. */\r\n  _flag: Flag = '0';\r\n\r\n  /**\r\n   * Init the controller given the grid Element ref.\r\n   *\r\n   * @param gridElementRef - the ref of the grid element.\r\n   */\r\n  useInit(gridElementRef: RefObject<HTMLElement>): void {\r\n    this.updateFlag();\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n      invariant(gridElementRef.current !== null);\r\n      this._fiber = getFiber(gridElementRef.current);\r\n    }, []); // eslint-disable-line\r\n  }\r\n\r\n  /**\r\n   * Return the DOM elements in the chosen positions.\r\n   *\r\n   * @param orderedIndices - The positions.\r\n   * @returns - The elements.\r\n   */\r\n  getStateNodes(orderedIndices: number[]): HTMLElement[] {\r\n    const stateNodes: HTMLElement[] = [];\r\n    // If there aren't indices retun an empty array.\r\n    if (orderedIndices.length === 0) return stateNodes;\r\n\r\n    // The first child.\r\n    let child = getCurrentFiber(this._fiber, this._flag).child;\r\n\r\n    // Fill the state nodes array.\r\n    // We trust that the user input.\r\n    orderedIndices.forEach((index) => {\r\n      // @ts-ignore\r\n      while (child.index !== index) {\r\n        // @ts-ignore\r\n        child = child.sibling;\r\n      }\r\n\r\n      // @ts-ignore\r\n      stateNodes.push(getStateNode(child));\r\n    });\r\n\r\n    return stateNodes;\r\n  }\r\n\r\n  /**\r\n   * Append an itemComponent fiber\r\n   * (the same is done for the alternate if exists).\r\n   *\r\n   * @param child - The item.\r\n   */\r\n  append(itemComponentFiber: ItemComponentFiber): void {\r\n    // Get the current fiber.\r\n    const fiber = getCurrentFiber(this._fiber, this._flag);\r\n    // Append the fiber.\r\n    appendFiber(fiber, itemComponentFiber);\r\n\r\n    if (fiber.alternate) {\r\n      if (itemComponentFiber.alternate) {\r\n        // Append the alternate.\r\n        appendFiber(fiber.alternate, itemComponentFiber.alternate);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove an itemComponent fiber given the key of its Item\r\n   * (The same is done for the alternate if exists).\r\n   *\r\n   * @param key - The key of the item.\r\n   * @returns - The removed item.\r\n   */\r\n  remove(key: Key): ItemComponentFiber {\r\n    // Get the current fiber.\r\n    const fiber = getCurrentFiber(this._fiber, this._flag);\r\n    // Remove the fiber.\r\n    const removedChild = removeChild(fiber, key);\r\n\r\n    if (fiber.alternate) {\r\n      if (removedChild.alternate) {\r\n        // Remove the alternate.\r\n        removeChild(fiber.alternate, key);\r\n      }\r\n    }\r\n\r\n    return removedChild;\r\n  }\r\n\r\n  /**\r\n   * Return the props containing the flag value to add in the grid element.\r\n   *\r\n   * @returns - The props.\r\n   */\r\n  getFlagProp(): {[FlagProp]: Flag} {\r\n    return {[FlagProp]: this._flag};\r\n  }\r\n\r\n  /**\r\n   * Update the flag value.\r\n   */\r\n  updateFlag(): void {\r\n    if (this._flag === '0') this._flag = '1';\r\n    else this._flag = '0';\r\n  }\r\n\r\n  /**\r\n   * Destroy the instance.\r\n   */\r\n  destroy(): void {\r\n    // @ts-ignore\r\n    this._fiber = null;\r\n  }\r\n}\r\n\r\n/**\r\n * The flag prop name.\r\n */\r\nexport const FlagProp = 'muuri-react-flag';\r\n\r\n/**\r\n * Get the fiber of the given grid element.\r\n *\r\n * @param grid - The element.\r\n * @return - The fiber node.\r\n */\r\nfunction getFiber(grid: HTMLElement): GridElementFiber {\r\n  const key = Object.keys(grid).find(\r\n    (key) =>\r\n      key.startsWith('__reactInternalInstance$') ||\r\n      key.startsWith('__reactFiber$')\r\n  );\r\n\r\n  invariant(\r\n    typeof key === 'string',\r\n    'Cannot find the __reactInternalInstance$'\r\n  );\r\n\r\n  // @ts-ignore\r\n  return grid[key];\r\n}\r\n\r\n/**\r\n * Return the current fiber.\r\n * Try to use the prop flag for the search first,\r\n * if this is not possible try the RootFiber.\r\n * The research on the flag is carried out because it is more\r\n * performing than the second and because if the React team\r\n * decides to change the functioning of the RootFiber,\r\n * not all features will stop working.\r\n * (It is rare for this to happen in the current version 16.x.x,\r\n * but if it does, it would not be a breacking change.)\r\n *\r\n * @param fiber - The fiber.\r\n * @param flag - the flag.\r\n * @returns - The current fiber.\r\n */\r\nfunction getCurrentFiber(\r\n  fiber: GridElementFiber,\r\n  currentFlag: Flag\r\n): GridElementFiber {\r\n  if (!fiber.alternate) return fiber;\r\n\r\n  // Flags.\r\n  const fiberFlag = fiber.memoizedProps[FlagProp];\r\n  const alternateFlag = fiber.alternate.memoizedProps[FlagProp];\r\n\r\n  // If the two flags are the same it should mean that\r\n  // in at least one of the items there has been a re-render\r\n  // from the last render of the GridComponent.\r\n  // We can no longer trust the flag prop and we have\r\n  // to look for the RootFiber and check which\r\n  // fiber is in the current tree.\r\n  if (fiberFlag === alternateFlag) {\r\n    let topFiber: Fiber = fiber;\r\n\r\n    // Get the top fiber\r\n    // (Not the RootFiber).\r\n    while (topFiber.return) {\r\n      topFiber = topFiber.return;\r\n    }\r\n\r\n    // Fibers.\r\n    const rootFiber = topFiber.stateNode;\r\n    const topCurrentFiber = rootFiber.current;\r\n\r\n    // The current fiber.\r\n    return topCurrentFiber === topFiber ? fiber : fiber.alternate;\r\n  }\r\n\r\n  // If we got here we can trust the flag prop to find the current Fiber.\r\n  return fiberFlag === currentFlag ? fiber : fiber.alternate;\r\n}\r\n\r\n/**\r\n * Returns the first stateNode among the descendants\r\n * of the given itemComponent Fiber.\r\n *\r\n * @param itemComponentFiber - The fiber.\r\n * @returns - The element.\r\n */\r\nfunction getStateNode(itemComponentFiber: ItemComponentFiber): HTMLElement {\r\n  // ItemComponent -> ItemProvider -> Item.\r\n  let itemFiber = itemComponentFiber.child.child;\r\n  // @ts-ignore\r\n  while (!(itemFiber.stateNode instanceof HTMLElement))\r\n    // @ts-ignore\r\n    itemFiber = itemFiber.child;\r\n\r\n  return itemFiber.stateNode;\r\n}\r\n\r\n/**\r\n * Append the child fiber in the last position among the children of the parent fiber.\r\n *\r\n * @param parent - The parent fiber.\r\n * @param child - The child fiber.\r\n */\r\nfunction appendFiber(\r\n  parent: GridElementFiber,\r\n  child: ItemComponentFiber\r\n): void {\r\n  if (!parent.child) {\r\n    // If it has no child.\r\n    parent.child = child;\r\n    child.index = 0;\r\n  } else {\r\n    let c = parent.child;\r\n    while (c.sibling) {\r\n      c = c.sibling;\r\n    }\r\n    child.index = c.index + 1;\r\n    // Inserted as last child.\r\n    c.sibling = child;\r\n  }\r\n\r\n  // Update the references.\r\n  child.return = parent;\r\n  // If we are in development.\r\n  if (child._debugOwner) child._debugOwner = parent.return?.return;\r\n}\r\n\r\n/**\r\n * Remove a child with the given key from the fiber.\r\n *\r\n * @param parent - The fiber.\r\n * @param key - The key of the item.\r\n * @return - The removed fiber.\r\n */\r\nfunction removeChild(parent: GridElementFiber, key: Key): ItemComponentFiber {\r\n  let child = parent.child;\r\n  let removedChild;\r\n\r\n  // @ts-ignore\r\n  if (hasNot(child, key)) {\r\n    // @ts-ignore\r\n    while (hasNot(child.sibling, key)) {\r\n      // @ts-ignore\r\n      child = child.sibling;\r\n    }\r\n    // @ts-ignore\r\n    removedChild = removeSibling(child);\r\n    // @ts-ignore\r\n    adjustIndices(child);\r\n  } else {\r\n    removedChild = removeFirstChild(parent);\r\n    // @ts-ignore\r\n    child = child.sibling;\r\n    if (child) adjustIndices(child);\r\n  }\r\n\r\n  removedChild.sibling = null;\r\n  return removedChild;\r\n}\r\n\r\n/**\r\n * Remove the first itemComponent fiber of a gridELement fiber and return it.\r\n *\r\n * @param GridElementFiber - The gridELement fiber.\r\n * @return - The removed itemComponent fiber.\r\n */\r\nfunction removeFirstChild(\r\n  gridElementFiber: GridElementFiber\r\n): ItemComponentFiber {\r\n  const removed = gridElementFiber.child;\r\n  // @ts-ignore\r\n  gridElementFiber.child = gridElementFiber.child.sibling;\r\n  // @ts-ignore\r\n  return removed;\r\n}\r\n\r\n/**\r\n * Remove the first sibling from a itemComponent fiber and return it.\r\n *\r\n * @param fiber - The fiber.\r\n * @return - The removed sibling.\r\n */\r\nfunction removeSibling(fiber: ItemComponentFiber): ItemComponentFiber {\r\n  const removed = fiber.sibling;\r\n  // @ts-ignore\r\n  fiber.sibling = fiber.sibling.sibling;\r\n  // @ts-ignore\r\n  return removed;\r\n}\r\n\r\n/**\r\n * Adjust the indices of the siblings of an itemComponent fiber.\r\n *\r\n * @param itemComponentFiber - The itemComponent fiber.\r\n */\r\nfunction adjustIndices(itemComponentFiber: ItemComponentFiber): void {\r\n  while (itemComponentFiber.sibling) {\r\n    itemComponentFiber.sibling.index = itemComponentFiber.index + 1;\r\n    itemComponentFiber = itemComponentFiber.sibling;\r\n  }\r\n}\r\n\r\n/**\r\n * Returns if the itemComponent fiber is not the parent of the item with the given key.\r\n *\r\n * @param itemComponentFiber - The itemComponent fiber.\r\n * @param key - The key of the item.\r\n * @return - If the itemComponent fiber is not the parent of the item with the given key.\r\n */\r\nfunction hasNot(itemComponentFiber: ItemComponentFiber, key: Key): boolean {\r\n  // ItemComponent -> ItemProvider -> Item.\r\n  return itemComponentFiber.child.child.key !== key;\r\n}\r\n", "import {Children} from 'react';\r\nimport type {ReactElement, Key} from 'react';\r\n\r\n/**\r\n * CONTROLLER: GRID\r\n *\r\n * The purpose of this controller is to manage children\r\n * during each render of the component, and provide\r\n * the indexes of the new children added.\r\n */\r\nexport class ChildrenController {\r\n  /** The old children. */\r\n  _oldChildrenArray: ReactElement[] = [];\r\n  /** The current children. */\r\n  _children: ReactElement[] = [];\r\n  /** The indices of the last added children. */\r\n  _indicesToAdd: number[] = [];\r\n  /** The number of the items being dragged. */\r\n  _dragCounter = 0;\r\n\r\n  /**\r\n   * Init all the settings given the new children.\r\n   *\r\n   * @param newChildren - the new children.\r\n   */\r\n  useInit(newChildren?: ReactElement[]): void {\r\n    // @ts-ignore\r\n    // We need to ensure that the children are in an array.\r\n    const newChildrenArray: ReactElement[] = Children.toArray(newChildren);\r\n\r\n    // The indices to add.\r\n    this._indicesToAdd = getIndicesToAdd(\r\n      newChildrenArray,\r\n      this._oldChildrenArray\r\n    );\r\n\r\n    // The _children will be used to map all\r\n    // the child in the render method.\r\n    // We can't use the ChildrenArray because we need the users\r\n    // key provided in the components and not the escaped one (e.g. .$1).\r\n    this._children = newChildren || [];\r\n    this._oldChildrenArray = newChildrenArray;\r\n  }\r\n\r\n  /**\r\n   * Remove a child in the given position and return it.\r\n   *\r\n   * @param index - The index of the child to remove.\r\n   * @returns - The removed child.\r\n   */\r\n  remove(index: number): ReactElement {\r\n    return this._oldChildrenArray.splice(index, 1)[0];\r\n  }\r\n\r\n  /**\r\n   * Append a child in the children array.\r\n   *\r\n   * @param child - The child to append.\r\n   */\r\n  append(child: ReactElement): void {\r\n    this._oldChildrenArray.push(child);\r\n  }\r\n\r\n  /**\r\n   * Returns the ordered array of indices of the added children.\r\n   */\r\n  getIndicesToAdd(): number[] {\r\n    return this._indicesToAdd;\r\n  }\r\n\r\n  /**\r\n   * Map all the children.\r\n   *\r\n   * @param cb - The callback.\r\n   * @returns - The mapped children.\r\n   */\r\n  render(cb: (child: ReactElement, key: Key) => ReactElement): ReactElement[] {\r\n    const children = Children.map(this._children, (child) => {\r\n      // @ts-ignore\r\n      // there are rare cases where the keys are not indispensable,\r\n      // the user may not choose to use at his own risk.\r\n      return cb(child, child.key);\r\n    });\r\n\r\n    // Flush the children.\r\n    this.flush();\r\n\r\n    return children;\r\n\r\n    /**\r\n    // If an item is being dragged we need to ensure\r\n    // that no child is inserted before it.\r\n    return this._dragCounter === 0\r\n      ? children\r\n      : getChildrenInSafePositions(children, this._indicesToAdd);\r\n       */\r\n  }\r\n\r\n  /**\r\n   * Increment the drag counter.\r\n   */\r\n  incrementDragCounter(): void {\r\n    this._dragCounter += 1;\r\n  }\r\n\r\n  /**\r\n   * Decrement the drag counter.\r\n   */\r\n  decrementDragCounter(): void {\r\n    this._dragCounter -= 1;\r\n  }\r\n\r\n  /**\r\n   * Remove the current children so they can be garbage collected.\r\n   */\r\n  flush(): void {\r\n    this._children = [];\r\n  }\r\n\r\n  /**\r\n   * Destroy the instance.\r\n   */\r\n  destroy(): void {\r\n    this.flush();\r\n  }\r\n}\r\n\r\n/**\r\n * Return an array of positions of the added children.\r\n * The algorithm is optimized for cases where the order of\r\n * the items does not change during re-renders (about 100% of cases).\r\n * The positions are in ascending order.\r\n *\r\n * @param newChildren - The new children.\r\n * @param oldChildren - The old children.\r\n * @return - The indices.\r\n */\r\nexport function getIndicesToAdd(\r\n  newChildren: React.ReactElement[],\r\n  oldChildren: React.ReactElement[]\r\n): number[] {\r\n  const indicesToAdd: number[] = [];\r\n  let oIndex = 0;\r\n\r\n  for (let nIndex = 0; nIndex < newChildren.length; nIndex++) {\r\n    // Finde the index.\r\n    const index = findIndex(oldChildren, newChildren[nIndex], oIndex);\r\n\r\n    if (index === -1) {\r\n      // If it is not present is a new Child.\r\n      indicesToAdd.push(nIndex);\r\n    } else {\r\n      // If it is present restart the research\r\n      // from the given index.\r\n      oIndex = index;\r\n    }\r\n  }\r\n\r\n  return indicesToAdd;\r\n}\r\n\r\n/**\r\n * Returns the index of the child in the children array,\r\n * if it is not present returns -1.\r\n * The research start from the given 'fromIndex'.\r\n *\r\n * @param child - The child to search.\r\n * @param children - The children.\r\n * @param fromIndex - The initial index.\r\n * @returns - The index of the child.\r\n */\r\nfunction findIndex(\r\n  children: React.ReactElement[],\r\n  child: React.ReactElement,\r\n  fromIndex: number\r\n): number {\r\n  fromIndex = fromIndex > children.length ? children.length : fromIndex;\r\n\r\n  // If the heuristics are respected the child will be here.\r\n  for (let index = fromIndex; index < children.length; index++) {\r\n    if (is(child, children[index])) return index;\r\n  }\r\n\r\n  // If the child is here the heuristics are not respected.\r\n  for (let index = 0; index < fromIndex; index++) {\r\n    if (is(child, children[index])) return index;\r\n  }\r\n\r\n  // The child is not present.\r\n  return -1;\r\n}\r\n\r\n/**\r\n * There would be the risk that a component will be inserted before\r\n * an item that is being dragged (and that is placed in a drag\r\n * container that is not the grid element). React would use\r\n * insertBefore to add the elements and this would cause an error.\r\n * To avoid this problem, if any item is being dragged,\r\n * all new components are added at the end so that\r\n * React uses appendChild to add the elements in the DOM.\r\n *\r\n * @param children - The new children to set.\r\n * @param indicesToAdd - The indices of the added children.\r\n * @returns - The children in safe postions.\r\n *\r\nfunction getChildrenInSafePositions(\r\n  newChildren: ReactElement[],\r\n  indicesToAdd: number[]\r\n): ReactElement[] {\r\n  // Check if there are dragged items.\r\n  if (indicesToAdd.length === 0) return newChildren;\r\n\r\n  const addedChildren: ReactElement[] = [];\r\n\r\n  // Set the added children.\r\n  indicesToAdd.reverse().forEach((index) => {\r\n    const [newChild] = newChildren.splice(index, 1);\r\n    addedChildren.push(newChild);\r\n  });\r\n\r\n  return newChildren.concat(addedChildren);\r\n}\r\n\r\n/**\r\n * Return if the components have the same key.\r\n *\r\n * @param componentA - The first component.\r\n * @param componentB - The second component.\r\n * @returns - If they have the same key.\r\n */\r\nfunction is(\r\n  componentA: React.ReactElement,\r\n  componentB: React.ReactElement\r\n): boolean {\r\n  return componentA.key === componentB.key;\r\n}\r\n", "import {addDecoration} from '../decorators';\r\nimport type {DecoratedGrid} from '../../interfaces';\r\n\r\n/**\r\n * Fill a grid instance:\r\n *  - Add the sizer element.\r\n *\r\n * @param grid - The Muuri instance.\r\n */\r\nexport function fillGrid(grid: DecoratedGrid): void {\r\n  const sizerElement = document.createElement('div');\r\n\r\n  // Keep the element hidden.\r\n  sizerElement.style.visibility = 'hidden';\r\n  sizerElement.style.position = 'absolute';\r\n  // Add the class.\r\n  sizerElement.classList.add('grid-sizer');\r\n\r\n  // Set the element.\r\n  addDecoration(grid, {sizerElement});\r\n  const gridElement = grid.getElement();\r\n\r\n  // Insert as first child.\r\n  if (gridElement.children.length === 0) {\r\n    gridElement.appendChild(sizerElement);\r\n  } else {\r\n    gridElement.insertBefore(sizerElement, gridElement.children[0]);\r\n  }\r\n}\r\n", "// Allowed position values.\r\nconst positions = ['relative', 'absolute', 'fixed'];\r\n\r\n/**\r\n * Fill a grid element:\r\n * - If it is not position the style.position is setted to \"relative\".\r\n * - The CSS \"containerClass\" is added.\r\n *\r\n * It also wrap the className setter to\r\n * avoid React to remove the standard class\r\n * of Muuri from the grid.\r\n *\r\n * @param gridElement - The element to fill.\r\n * @param gridClass - The Css class of the grid element.\r\n */\r\nexport function fillGridElement(\r\n  gridElement: HTMLElement,\r\n  gridClass: string\r\n): void {\r\n  const position = getComputedStyle(gridElement).position;\r\n\r\n  // Set the default position.\r\n  if (!positions.includes(position)) {\r\n    gridElement.style.position = positions[0];\r\n  }\r\n\r\n  // Set the grid class.\r\n  gridElement.classList.add(gridClass);\r\n\r\n  // Ensure that the grid class can't be removed.\r\n  const defaultSetAttribute = gridElement.setAttribute.bind(gridElement);\r\n  gridElement.setAttribute = function setAttribute(attribute, value) {\r\n    if (attribute === 'class') {\r\n      const classNames = (gridElement.getAttribute('class') || '').split(' ');\r\n      // Add the grid class.\r\n      if (!classNames.includes(gridClass)) value = `${value} ${gridClass}`;\r\n    }\r\n\r\n    defaultSetAttribute(attribute, value);\r\n  };\r\n}\r\n", "import type {DecoratedItem} from '../../interfaces';\r\nimport {addDecoration} from '../decorators';\r\n\r\n/**\r\n * Fill an item:\r\n * - Add the _component decoration.\r\n * - Re-define the _sortData property.\r\n *\r\n * @param item - The item to fill.\r\n */\r\nexport function fillItem(item: DecoratedItem): void {\r\n  addDecoration(item, {props: {}, data: {}});\r\n  // Change the sort data.\r\n  Object.defineProperty(item, '_sortData', {\r\n    get() {\r\n      return this.getData();\r\n    },\r\n    set() {\r\n      // nothing to do here.\r\n    },\r\n  });\r\n}\r\n", "/**\r\n * Fill an Item (outer) element:\r\n * - style.position setted to \"absolute\".\r\n *\r\n * It also wrap the className setter to\r\n * avoid React to remove the standard classes\r\n * of Muuri from the item.\r\n *\r\n * @param itemElement - The item element to fill.\r\n * @param itemClasses - The Css classes of the items.\r\n */\r\nexport function fillItemElement(\r\n  itemElement: HTMLElement,\r\n  itemClasses: string[]\r\n): void {\r\n  itemElement.style.position = 'absolute';\r\n\r\n  // Ensure that the Css item classes are not removed.\r\n  const defaultSetAttribute = itemElement.setAttribute.bind(itemElement);\r\n  itemElement.setAttribute = function setAttribute(attribute, value) {\r\n    if (attribute === 'class') {\r\n      const classNames = (itemElement.getAttribute('class') || '').split(' ');\r\n      const classNamesToAdd = classNames.filter((className) =>\r\n        itemClasses.includes(className)\r\n      );\r\n\r\n      // Add the Css items classes.\r\n      value = `${value} ${classNamesToAdd.join(' ')}`;\r\n    }\r\n\r\n    defaultSetAttribute(attribute, value);\r\n  };\r\n}\r\n", "import {useRef} from 'react';\r\n\r\n/**\r\n * Replacement for useCallback use case with empty array,\r\n * it memoize only the first function passed.\r\n * https://github.com/facebook/react/issues/15278.\r\n *\r\n * @param callback - The function to memoize.\r\n * @returns - The memoized function.\r\n */\r\nexport function useFunction<T extends (...args: any[]) => any>(callback: T): T {\r\n  return useRef<T>(callback).current;\r\n}\r\n", "import {useEffect, useRef} from 'react';\r\nimport {useReference} from './useReference';\r\n\r\n/**\r\n * Like useEffect but run instantly.\r\n *\r\n * @param didUpdate - The method to run.\r\n * @param deps - The dependecies.\r\n */\r\nexport function useInstantEffect(\r\n  didUpdate: () => void | (() => void),\r\n  deps: any[]\r\n): void {\r\n  // Deps check.\r\n  const needUpdate = useReference(deps);\r\n  const cleanUpRef = useRef<(() => void) | void>();\r\n\r\n  // Run.\r\n  if (needUpdate) {\r\n    if (cleanUpRef.current) cleanUpRef.current();\r\n    cleanUpRef.current = didUpdate();\r\n  }\r\n\r\n  // Catch unmount.\r\n  useEffect(() => {\r\n    return () => {\r\n      if (cleanUpRef.current) cleanUpRef.current();\r\n    };\r\n  }, []);\r\n}\r\n", "import {useRef} from 'react';\r\n\r\n/**\r\n * Accept a dependencyList and return if it has changed from\r\n * the previous render.\r\n *\r\n * @param dependencyList - The dependencyList.\r\n * @returns - If the dependencyList is changed from the previous render.\r\n */\r\nexport function useReference(dependencyList: any[]): boolean {\r\n  const ref = useRef<any[]>(dependencyList);\r\n\r\n  // If it is the first call return true.\r\n  if (ref.current === dependencyList) return true;\r\n\r\n  // Compare the dependencyLists.\r\n  const didUpdate = compare(ref.current, dependencyList);\r\n  // Keep the reference of the new one.\r\n  ref.current = dependencyList;\r\n\r\n  return didUpdate;\r\n}\r\n\r\n/**\r\n * Compare two dependencyLists and return if they are different.\r\n *\r\n * @param a - The first dependencyList to compare.\r\n * @param b - The second dependencyList to compare.\r\n * @returns - If the 2 dependencyLists are different.\r\n */\r\nfunction compare(a: any[], b: any[]): boolean {\r\n  if (a.length !== b.length) return true;\r\n\r\n  for (let i = 0; i < a.length; i++) {\r\n    if (a[i] !== b[i]) return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n", "import {useRef} from 'react';\r\n\r\n/**\r\n * Replacement for useMemo use case with empty array,\r\n * it memoize only the first computed value.\r\n * https://github.com/facebook/react/issues/15278.\r\n *\r\n * @param factory - The factory method.\r\n * @returns - The memoized value.\r\n */\r\nexport function useMemoized<T>(factory: () => T): T {\r\n  const valueRef = useRef<T>();\r\n\r\n  if (!valueRef.current) {\r\n    valueRef.current = factory();\r\n  }\r\n\r\n  return valueRef.current;\r\n}\r\n", "import {useState} from 'react';\r\nimport {useFunction} from './useFunction';\r\n\r\n/**\r\n * Returns a (memoized) function to re-render\r\n * the component in which the hook has been called.\r\n *\r\n * @returns - The re-render method.\r\n */\r\nexport function useRerender(): () => void {\r\n  const setState = useState<object>()[1];\r\n  return useFunction<() => void>(() => {\r\n    setState(Object.create(null));\r\n  });\r\n}\r\n", "import type {DecoratedGrid, ReactGridProps} from '../../interfaces';\r\n\r\n/**\r\n * Add the given items in the given positions.\r\n *\r\n * @param grid - The grid instance.\r\n * @param addedDOMItems - The added DOM items.\r\n * @param indicesToAdd - the positions in which to add the items.\r\n * @param addOptions - The add options.\r\n * @param filter - The filter.\r\n */\r\nexport function addItems(\r\n  grid: DecoratedGrid,\r\n  addedDOMItems: HTMLElement[],\r\n  indicesToAdd: number[],\r\n  addOptions: ReactGridProps['addOptions'],\r\n  filter: ReactGridProps['filter']\r\n): void {\r\n  for (let i = 0; i < addedDOMItems.length; i++) {\r\n    // Add the items.\r\n    grid.add(addedDOMItems[i], {index: indicesToAdd[i], layout: false});\r\n  }\r\n\r\n  // Show the added items (usefull just if the items are\r\n  // hidden by default and the filter is not setted).\r\n  if (!filter && addOptions?.show) {\r\n    grid.show(grid.getItems(indicesToAdd), {layout: false});\r\n  }\r\n}\r\n", "import type {DecoratedGrid, ReactGridProps} from '../../interfaces';\r\n\r\n/**\r\n * Filter the items with the given predicate.\r\n *\r\n * @param grid - The grid instance.\r\n * @param predicate - The filter predicate.\r\n */\r\nexport function filterItems(\r\n  grid: DecoratedGrid,\r\n  predicate: Exclude<ReactGridProps['filter'], undefined>\r\n): void {\r\n  grid.filter((item) => predicate(item.getData(), item), {layout: false});\r\n}\r\n", "import type {DecoratedGrid} from '../../interfaces';\r\n\r\n/** Class name. */\r\nconst gridClassName = 'containerClass';\r\n\r\n/**\r\n * Returns the Css class of the grid element.\r\n *\r\n * @param grid - The Muuri instance.\r\n * @returns - The class.\r\n */\r\nexport function getGridClass(grid: DecoratedGrid): string {\r\n  // @ts-ignore\r\n  return grid._settings[gridClassName];\r\n}\r\n", "import type {DecoratedGrid} from '../../interfaces';\r\n\r\n/** Class names. */\r\nconst itemClassNames = [\r\n  'itemClass',\r\n  'itemVisibleClass',\r\n  'itemHiddenClass',\r\n  'itemPositioningClass',\r\n  'itemDraggingClass',\r\n  'itemReleasingClass',\r\n  'itemPlaceholderClass',\r\n] as const;\r\n\r\n/**\r\n * Returns the items classes.\r\n *\r\n * @param grid - The Muuri instance.\r\n * @returns - The classes.\r\n */\r\nexport function getItemClasses(grid: DecoratedGrid): string[] {\r\n  // @ts-ignore\r\n  return itemClassNames.map((className) => grid._settings[className]);\r\n}\r\n", "import type {DecoratedGrid, DecoratedItem} from '../../interfaces';\r\n\r\n/**\r\n * Hide the given items.\r\n *\r\n * @param grid - The grid instance.\r\n * @param items - The items to hide.\r\n */\r\nexport function hideItems(grid: DecoratedGrid, items: DecoratedItem[]): void {\r\n  grid.hide(items, {layout: false});\r\n}\r\n", "import type {DecoratedGrid, DecoratedItem} from '../../interfaces';\r\n\r\n/**\r\n * Remove the given items.\r\n *\r\n * @param grid - The grid instance.\r\n * @param itemsToRemove - The items to remove.\r\n */\r\nexport function removeItems(\r\n  grid: DecoratedGrid,\r\n  itemsToRemove: DecoratedItem[]\r\n): void {\r\n  grid.remove(itemsToRemove, {layout: false, removeElements: false});\r\n}\r\n", "import type {DecoratedGrid, DecoratedItem} from '../../interfaces';\r\n\r\n/**\r\n * Show the given items.\r\n *\r\n * @param grid - The grid instance.\r\n * @param items - The items to show.\r\n */\r\nexport function showItems(grid: DecoratedGrid, items: DecoratedItem[]): void {\r\n  grid.show(items, {layout: false});\r\n}\r\n", "import type {\r\n  DecoratedGrid,\r\n  DecoratedItem,\r\n  ReactGridProps,\r\n} from '../../interfaces';\r\n\r\n/**\r\n * Sort the items.\r\n *\r\n * @param grid - The grid instance.\r\n * @param predicate - The sort predicate.\r\n * @param sortOptions - The sort options.\r\n */\r\nexport function sortItems(\r\n  grid: DecoratedGrid,\r\n  predicate: Exclude<ReactGridProps['sort'], undefined>,\r\n  sortOptions: ReactGridProps['sortOptions']\r\n): void {\r\n  // Disable the layout.\r\n  // @ts-ignore\r\n  sortOptions = {...(sortOptions || {}), layout: false};\r\n\r\n  // Handle a function.\r\n  if (typeof predicate === 'function') {\r\n    handleFunction(grid, predicate, sortOptions);\r\n  }\r\n\r\n  // Handle a string.\r\n  if (typeof predicate === 'string') {\r\n    handleString(grid, predicate, sortOptions);\r\n  }\r\n\r\n  // Hanndle an array of keys.\r\n  if (Array.isArray(predicate)) {\r\n    handleArray(grid, predicate, sortOptions);\r\n  }\r\n}\r\n\r\n/**\r\n * Sort the items given a predicate function.\r\n *\r\n * @param grid - The grid instance.\r\n * @param predicate - The predicate function.\r\n * @param sortOptions - The sort options.\r\n */\r\nfunction handleFunction(\r\n  grid: DecoratedGrid,\r\n  predicate: Extract<ReactGridProps['sort'], Function>,\r\n  sortOptions: ReactGridProps['sortOptions']\r\n): void {\r\n  grid.sort(\r\n    (itemA, itemB) => predicate(itemA.getData(), itemB.getData(), itemA, itemB),\r\n    sortOptions\r\n  );\r\n}\r\n\r\n/**\r\n * Sort the items given a predicate string.\r\n *\r\n * @param grid - The grid instance.\r\n * @param predicate - The predicate string.\r\n * @param sortOptions - The sort options.\r\n */\r\nfunction handleString(\r\n  grid: DecoratedGrid,\r\n  predicate: Extract<ReactGridProps['sort'], string>,\r\n  sortOptions: ReactGridProps['sortOptions']\r\n): void {\r\n  grid.sort(predicate, sortOptions);\r\n}\r\n\r\n/**\r\n * Sort the items given an array of keys.\r\n * If the key has a match, the item is inserted in that position, otherwise at the bottom.\r\n *\r\n * @param grid - The grid instance.\r\n * @param predicate - The array of keys.\r\n * @param sortOptions - The sort options.\r\n */\r\nfunction handleArray(\r\n  grid: DecoratedGrid,\r\n  predicate: Extract<ReactGridProps['sort'], Array<any>>,\r\n  sortOptions: ReactGridProps['sortOptions']\r\n): void {\r\n  const items: DecoratedItem[] = grid.getItems();\r\n  // Items that can be sorted.\r\n  const sortedItems: DecoratedItem[] = [];\r\n  // Items that can't be sorted.\r\n  const otherItems: DecoratedItem[] = [];\r\n\r\n  // Fills the arrays.\r\n  items.forEach((item) => {\r\n    const itemKey = item._component.key;\r\n    const index = predicate.findIndex((key) => key === itemKey);\r\n\r\n    if (index > -1) {\r\n      sortedItems[index] = item;\r\n    } else {\r\n      otherItems.push(item);\r\n    }\r\n  });\r\n\r\n  // Sort.\r\n  grid.sort(\r\n    Array.prototype.concat(\r\n      // Some position can be empty.\r\n      sortedItems.filter((item) => !!item),\r\n      otherItems\r\n    ),\r\n    sortOptions\r\n  );\r\n}\r\n", "/* React */\r\nimport React, {forwardRef, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n/* Muuri */\r\nimport Muuri from 'muuri';\r\n/* Global map */\r\nimport {muuriMap} from '../muuri-map';\r\n/* Component */\r\nimport {GridComponent} from './gridComponent';\r\n/* Interfaces */\r\nimport type {DecoratedGrid, MuuriComponentProps} from '../interfaces';\r\n/* Utils */\r\nimport {useInstantEffect, useMemoized} from '../utils/hooks';\r\nimport {addDecoration, removeDecorations} from '../utils/decorators';\r\nimport {\r\n  getInstance,\r\n  handleRef,\r\n  setDragAutoScroll,\r\n  setDragContainer,\r\n  setDragSort,\r\n  setDragStartPredicate,\r\n} from '../utils/muuri';\r\n\r\n// Muuri component.\r\nexport const MuuriComponent = forwardRef<DecoratedGrid, MuuriComponentProps>(\r\n  function MuuriComponent(\r\n    {\r\n      /* GridComponent props. */\r\n      children,\r\n      id,\r\n      groupIds,\r\n      gridProps,\r\n      filter,\r\n      sort,\r\n      sortOptions,\r\n      addOptions,\r\n      propsToData,\r\n      onSend,\r\n      onDragStart,\r\n      onDragEnd,\r\n      onFilter,\r\n      onSort,\r\n      onMount,\r\n      onUnmount,\r\n      forceSync,\r\n      dragFixed,\r\n      dragEnabled,\r\n      instantLayout,\r\n      /* Muuri options. */\r\n      ...options\r\n    },\r\n    muuriRef\r\n  ) {\r\n    // Generate the Muuri instance.\r\n    const grid = useMemoized(() => {\r\n      // Remove the standard option '*'.\r\n      // @ts-ignore\r\n      options.items = [];\r\n      // Muuri (0.9.0) generate the \"ItemDrag\" instances only if\r\n      // drag is enabled. These instances do not handle scrolling well on touch devices,\r\n      // so we only create these instances if drag-and-drop have to be used\r\n      // (assuming that a boolean is passed to the prop instead of the default value \"null\").\r\n      // The enabling / disabling of the drag is managed in dragStartPredicate.\r\n      // @ts-ignore\r\n      options.dragEnabled = dragEnabled !== null;\r\n\r\n      // Allow the drag container to be a React.Ref<HTMLElement>.\r\n      setDragContainer(options);\r\n      // Allow the option to be an object ({ groupId }).\r\n      setDragSort(options, muuriMap);\r\n      // Allow the target elements to be React.Ref<HTMLElement>.\r\n      setDragAutoScroll(options);\r\n      // Allow enabling / disabling the drag-and-drop.\r\n      setDragStartPredicate(options);\r\n\r\n      // Generate the instance.\r\n      const grid = getInstance(options);\r\n\r\n      // Add the instance to the map.\r\n      if (id) muuriMap.set(grid, id);\r\n      // Add the decoration.\r\n      addDecoration(grid, {id});\r\n      // Set the ref.\r\n      handleRef(muuriRef, grid);\r\n\r\n      return grid;\r\n    }); // eslint-disable-line\r\n\r\n    // On unmount effect.\r\n    useEffect(() => {\r\n      // Clean-up.\r\n      return () => {\r\n        // Unset the ref.\r\n        handleRef(muuriRef, null);\r\n        // Remove the decorations.\r\n        removeDecorations(grid);\r\n        // Remove the instance from the map.\r\n        if (id) muuriMap.delete(id);\r\n        // Destroy the instace\r\n        grid.destroy();\r\n      };\r\n    }, []); // eslint-disable-line\r\n\r\n    // Allow the groupIds to be changed.\r\n    useInstantEffect(() => {\r\n      // decorate the instance\r\n      addDecoration(grid, {groupIds});\r\n      // Add the instance to the groups.\r\n      if (groupIds) {\r\n        groupIds.forEach((groupId) => {\r\n          muuriMap.setGroup(grid, groupId);\r\n        });\r\n      }\r\n\r\n      // Clean-up.\r\n      return () => {\r\n        // Remove the instance from the groups.\r\n        if (groupIds) {\r\n          groupIds.forEach((groupId) => {\r\n            muuriMap.deleteGroup(grid, groupId);\r\n          });\r\n        }\r\n      };\r\n    }, groupIds || []);\r\n\r\n    // Render.\r\n    return (\r\n      <GridComponent\r\n        grid={grid}\r\n        gridProps={gridProps}\r\n        filter={filter}\r\n        sort={sort}\r\n        sortOptions={sortOptions}\r\n        addOptions={addOptions}\r\n        propsToData={propsToData}\r\n        onSend={onSend}\r\n        onDragStart={onDragStart}\r\n        onDragEnd={onDragEnd}\r\n        onFilter={onFilter}\r\n        onSort={onSort}\r\n        onMount={onMount}\r\n        onUnmount={onUnmount}\r\n        forceSync={forceSync}\r\n        dragFixed={dragFixed}\r\n        dragEnabled={dragEnabled}\r\n        instantLayout={instantLayout}>\r\n        {children}\r\n      </GridComponent>\r\n    );\r\n  }\r\n);\r\n\r\n// Proptypes.\r\nMuuriComponent.propTypes = {\r\n  id: PropTypes.string,\r\n  groupIds: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  showDuration: PropTypes.number,\r\n  showEasing: PropTypes.string,\r\n  hideDuration: PropTypes.number,\r\n  hideEasing: PropTypes.string,\r\n  visibleStyles: PropTypes.shape({}),\r\n  hiddenStyles: PropTypes.shape({}),\r\n  // @ts-ignore\r\n  layout: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.exact({\r\n      fillGaps: PropTypes.bool,\r\n      horizontal: PropTypes.bool,\r\n      alignRight: PropTypes.bool,\r\n      alignBottom: PropTypes.bool,\r\n      rounding: PropTypes.bool,\r\n    }),\r\n  ]),\r\n  layoutOnResize: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\r\n  layoutDuration: PropTypes.number,\r\n  layoutEasing: PropTypes.string,\r\n  dragContainer: PropTypes.oneOfType([\r\n    PropTypes.instanceOf(HTMLElement),\r\n    PropTypes.shape({\r\n      current: PropTypes.instanceOf(HTMLElement).isRequired,\r\n    }),\r\n  ]),\r\n  // @ts-ignore\r\n  dragStartPredicate: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.exact({\r\n      distance: PropTypes.number,\r\n      delay: PropTypes.number,\r\n      handle: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n    }),\r\n  ]),\r\n  dragAxis: PropTypes.oneOf(['x', 'y', 'xy'] as const),\r\n  dragSort: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.func,\r\n    PropTypes.exact({\r\n      groupId: PropTypes.string.isRequired,\r\n    }),\r\n  ]),\r\n  // @ts-ignore\r\n  dragSortHeuristics: PropTypes.exact({\r\n    sortInterval: PropTypes.number,\r\n    minDragDistance: PropTypes.number,\r\n    minBounceBackAngle: PropTypes.number,\r\n  }),\r\n  // @ts-ignore\r\n  dragSortPredicate: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.exact({\r\n      action: PropTypes.oneOf(['move', 'swap'] as const),\r\n      migrateAction: PropTypes.oneOf(['move', 'swap'] as const),\r\n      threshold: PropTypes.number,\r\n    }),\r\n  ]),\r\n  // @ts-ignore\r\n  dragRelease: PropTypes.exact({\r\n    duration: PropTypes.number,\r\n    easing: PropTypes.string,\r\n    useDragContainer: PropTypes.bool,\r\n  }),\r\n  // @ts-ignore\r\n  dragCssProps: PropTypes.exact({\r\n    touchAction: PropTypes.string,\r\n    userSelect: PropTypes.string,\r\n    userDrag: PropTypes.string,\r\n    tapHighlightColor: PropTypes.string,\r\n    touchCallout: PropTypes.string,\r\n    contentZooming: PropTypes.string,\r\n  }),\r\n  // @ts-ignore\r\n  dragPlaceholder: PropTypes.exact({\r\n    enabled: PropTypes.bool,\r\n    createElement: PropTypes.func,\r\n    onCreate: PropTypes.func,\r\n    onRemove: PropTypes.func,\r\n    easing: PropTypes.string,\r\n    duration: PropTypes.number,\r\n  }),\r\n  containerClass: PropTypes.string,\r\n  itemClass: PropTypes.string,\r\n  itemVisibleClass: PropTypes.string,\r\n  itemHiddenClass: PropTypes.string,\r\n  itemPositioningClass: PropTypes.string,\r\n  itemDraggingClass: PropTypes.string,\r\n  itemReleasingClass: PropTypes.string,\r\n  itemPlaceholderClass: PropTypes.string,\r\n};\r\n\r\n// Default props.\r\nMuuriComponent.defaultProps = {\r\n  ...Muuri.defaultOptions,\r\n  dragEnabled: null,\r\n};\r\n\r\n// Display name.\r\nMuuriComponent.displayName = 'MuuriComponent';\r\n", "import type {DecoratedGrid} from './interfaces';\r\n\r\n/**\r\n * Map that links the Muuri instances to\r\n * their id and group ids.\r\n */\r\nexport class MuuriMap {\r\n  /** Map of <id, Muuri instance>. */\r\n  _idMap = new Map<string, DecoratedGrid>();\r\n  /** Map of <id, Muuri instances>. */\r\n  _groupMap = new Map<string, DecoratedGrid[]>();\r\n\r\n  /**\r\n   * Get the grid instance with the chosen id.\r\n   *\r\n   * @param id - The id.\r\n   * @returns - The grid instance.\r\n   */\r\n  get(id: string): DecoratedGrid | null {\r\n    return this._idMap.get(id) || null;\r\n  }\r\n\r\n  /**\r\n   * Get all the grid instances in the group of the given id.\r\n   * The reference of the group array never changes.\r\n   *\r\n   * @param groupId - The group id.\r\n   * @returns - The array of grid instances.\r\n   */\r\n  getGroup(groupId: string): DecoratedGrid[] {\r\n    const group = this._groupMap.get(groupId);\r\n\r\n    if (!group) {\r\n      const newGroup: DecoratedGrid[] = [];\r\n      this._groupMap.set(groupId, newGroup);\r\n      return newGroup;\r\n    } else {\r\n      return group;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all the grid instances in the map.\r\n   *\r\n   * @returns - The grid instances.\r\n   */\r\n  getAll(): DecoratedGrid[] {\r\n    return Array.from(this._idMap.values());\r\n  }\r\n\r\n  /**\r\n   * Set the grid instance with the given id.\r\n   *\r\n   * @param grid - The grid instance.\r\n   * @param id - The id of the instance.\r\n   * @returns - The muuriMap.\r\n   */\r\n  set(grid: DecoratedGrid, id: string): this {\r\n    this._idMap.set(id, grid);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set the grid instance in the group of the given id.\r\n   *\r\n   * @param grid - The grid instance.\r\n   * @param groupId - The id of the group.\r\n   * @returns - The muuriMap.\r\n   */\r\n  setGroup(grid: DecoratedGrid, groupId: string): this {\r\n    const group = this._groupMap.get(groupId);\r\n\r\n    if (group) {\r\n      group.push(grid);\r\n    } else {\r\n      this._groupMap.set(groupId, [grid]);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Delete the grid instance with the given id.\r\n   *\r\n   * @param id - The id of the instance.\r\n   * @returns - The muuriMap.\r\n   */\r\n  delete(id: string): this {\r\n    this._idMap.delete(id);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Delete the instance from the group with the given id.\r\n   *\r\n   * @param grid - The grid instance.\r\n   * @param groupIds - The group ids of the instance.\r\n   */\r\n  deleteGroup(grid: DecoratedGrid, groupId: string): this {\r\n    const group = this._groupMap.get(groupId);\r\n\r\n    if (group) {\r\n      const index = group.indexOf(grid);\r\n      if (index > -1) group.splice(index, 1);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clear the maps.\r\n   */\r\n  clear(): this {\r\n    this._idMap.clear();\r\n    this._groupMap.clear();\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const muuriMap: MuuriMap = new MuuriMap();\r\n", "import Muuri from 'muuri';\r\nimport type {DecoratedGrid} from '../../interfaces';\r\n\r\n/**\r\n * Generate and returns a muuri instance with the given options.\r\n *\r\n * @param options - The options.\r\n * @returns - The muuri instance.\r\n */\r\nexport function getInstance(options: object): DecoratedGrid {\r\n  const el = document.createElement('div');\r\n  // The element won't be visible.\r\n  el.style.display = 'none';\r\n  // Muuri (0.8.0) need an element in the DOM to be instanciated.\r\n  document.body.appendChild(el);\r\n\r\n  // Generate the instance.\r\n  const grid = new Muuri(el, options);\r\n\r\n  // Remove the element.\r\n  document.body.removeChild(el);\r\n\r\n  return grid;\r\n}\r\n", "/**\r\n * Set the value in the ref.\r\n *\r\n * @param ref - The ref.\r\n * @param value - The value\r\n */\r\nexport function handleRef<T>(ref: React.Ref<T>, value: T | null): void {\r\n  if (!ref) return;\r\n\r\n  if (typeof ref === 'function') ref(value);\r\n  // @ts-ignore\r\n  else if ('current' in ref) ref.current = value;\r\n}\r\n", "import {invariant} from '../../invariant';\r\nimport type {\r\n  GridProps,\r\n  DragAutoScrollTarget,\r\n  DragAutoScrollTargetElement,\r\n} from '../../interfaces';\r\n\r\n/**\r\n * Wrap the 'dragAutoScroll' option.\r\n * Allow the target element to be a ref.\r\n *\r\n * @param options - The grid options.\r\n */\r\nexport function setDragAutoScroll(options: GridProps): void {\r\n  const {dragAutoScroll} = options;\r\n\r\n  // Wrap the options only if it is setted.\r\n  if (!dragAutoScroll || !Array.isArray(dragAutoScroll.targets)) return;\r\n\r\n  dragAutoScroll.targets.forEach((target) => {\r\n    // Check if it is an object to wrap.\r\n    if (isTargetElement(target)) return;\r\n\r\n    invariant(\r\n      'element' in target,\r\n      'You must provide an element in each scroll target'\r\n    );\r\n\r\n    // Scroll target element.\r\n    const element = target.element;\r\n    // The element ref.\r\n    let ref: {current: DragAutoScrollTargetElement | null} = {\r\n      current: null,\r\n    };\r\n\r\n    // Define the element property.\r\n    Object.defineProperty(target, 'element', {\r\n      get() {\r\n        return ref.current;\r\n      },\r\n      set(element) {\r\n        if (isTargetElement(element)) {\r\n          ref.current = element;\r\n        } else {\r\n          ref = element;\r\n        }\r\n      },\r\n    });\r\n\r\n    // Set the element.\r\n    target.element = element;\r\n  });\r\n}\r\n\r\n/**\r\n * Returns if the target is a valid element.\r\n *\r\n * @param element - The target.\r\n * @returns - If the target is a valid element.\r\n */\r\nexport function isTargetElement(target: DragAutoScrollTarget): boolean {\r\n  return (\r\n    // A DOM element.\r\n    target instanceof HTMLElement ||\r\n    // The window.\r\n    target instanceof window.constructor\r\n  );\r\n}\r\n", "import type {GridProps} from '../../interfaces';\r\n\r\n/**\r\n * Wrap the 'dragContainer' option.\r\n * Allow it to be a ref.\r\n *\r\n * @param options - The grid options.\r\n */\r\nexport function setDragContainer(options: GridProps): void {\r\n  const {dragContainer} = options;\r\n  // The drag container ref.\r\n  let ref = {current: null};\r\n\r\n  // Define the property.\r\n  Object.defineProperty(options, 'dragContainer', {\r\n    get() {\r\n      return ref.current;\r\n    },\r\n    set(value) {\r\n      if (!value || value instanceof Element) {\r\n        ref.current = value;\r\n      } else {\r\n        ref = value;\r\n      }\r\n    },\r\n  });\r\n\r\n  // Set the drag container.\r\n  options.dragContainer = dragContainer;\r\n}\r\n", "import {invariant} from '../../invariant';\r\nimport type {GridProps} from '../../interfaces';\r\nimport type {MuuriMap} from '../../muuri-map';\r\n\r\n/**\r\n * Wrap the 'dragSort' option.\r\n * Allow it to be an object containing the groupId of the chosen MuuriComponents.\r\n *\r\n * @param options - The grid options.\r\n * @param globalMap - The globalMap.\r\n */\r\nexport function setDragSort(options: GridProps, globalMap: MuuriMap): void {\r\n  const {dragSort} = options;\r\n  // Parse this options only if it is an object.\r\n  if (!dragSort || typeof dragSort !== 'object') return;\r\n  // Check the options.\r\n  invariant(\r\n    typeof dragSort.groupId === 'string',\r\n    'You must provide a string as groupId'\r\n  );\r\n\r\n  // The group, its reference doesn't change.\r\n  const group = globalMap.getGroup(dragSort.groupId);\r\n\r\n  // dragSort method.\r\n  options.dragSort = () => group;\r\n}\r\n", "import Muuri from 'muuri';\r\nimport {getDecoration, isDecorated} from '../decorators';\r\nimport type {GridProps, DecoratedDragStartPredicate} from '../../interfaces';\r\n\r\n/**\r\n * Wrap the 'dragStartPredicate' option.\r\n * To allow the drag:\r\n * - The global drag must be enabled.\r\n * - The item must be draggable.\r\n *\r\n * @param options - The grid options.\r\n */\r\nexport function setDragStartPredicate(options: GridProps): void {\r\n  const {dragStartPredicate} = options;\r\n\r\n  // Default predicate.\r\n  const defaultStartPredicate = getDefaultStartPredicate(dragStartPredicate);\r\n\r\n  // Wrap the method.\r\n  options.dragStartPredicate = (item, event) => {\r\n    if (!getDecoration(item.getGrid()).dragEnabled) return false;\r\n    if (isDecorated(item) && getDecoration(item).draggable === false)\r\n      return false;\r\n\r\n    return defaultStartPredicate(item, event);\r\n  };\r\n}\r\n\r\n/**\r\n * Given the dragStartPredicate option return the default method.\r\n *\r\n * @param dragStartPredicate - The dragStartPredicate option.\r\n * @returns - The defaultStartPredicate method.\r\n */\r\nfunction getDefaultStartPredicate(\r\n  dragStartPredicate: GridProps['dragStartPredicate']\r\n): DecoratedDragStartPredicate {\r\n  return typeof dragStartPredicate === 'function'\r\n    ? dragStartPredicate\r\n    : (item, event) => {\r\n        return Muuri.ItemDrag.defaultStartPredicate(\r\n          item,\r\n          event,\r\n          dragStartPredicate\r\n        );\r\n      };\r\n}\r\n", "export * from './useData';\r\nexport * from './useDrag';\r\nexport * from './useDraggable';\r\nexport * from './useGrid';\r\nexport * from './useRefresh';\r\nexport * from './useShow';\r\nexport * from './useVisibility';\r\n", "import {useItemContext} from '../contexts';\r\nimport {invariant} from '../invariant';\r\nimport {useFunction} from '../utils/hooks';\r\n\r\n// The method return by the hook.\r\nexport type SetDataMethod = (data: object, options?: UseDataOptions) => void;\r\n\r\n// The options of the hook and the method.\r\nexport type UseDataOptions = {\r\n  /** If the data have to be merged with the old one. */\r\n  merge?: boolean;\r\n};\r\n\r\n/**\r\n * The useData hook allow to set the data to the item in which the hook has been called.\r\n * It also returns the setter method.\r\n *\r\n * @param initialData - The data.\r\n * @param options - The options.\r\n * @returns - The setter method.\r\n */\r\nexport function useData(\r\n  initialData?: object,\r\n  options?: UseDataOptions\r\n): SetDataMethod {\r\n  const {itemRefController} = useItemContext();\r\n\r\n  // Check if the hook is called inside an item.\r\n  invariant(\r\n    itemRefController !== undefined,\r\n    'The useData hook can be used only inside an Item'\r\n  );\r\n\r\n  // Because of memoization, The identity of the function is guaranteed\r\n  // to be stable so it will be safe to omit them as a dependency.\r\n  const setData = useFunction<SetDataMethod>((data, options) => {\r\n    // Check if the data is an object.\r\n    invariant(\r\n      typeof data === 'object',\r\n      `The data must be an object, founded: ${typeof data}`\r\n    );\r\n\r\n    // Default options.\r\n    options = options || useData.defaultOptions;\r\n    // Set the data.\r\n    if (options.merge) {\r\n      // Merge.\r\n      const currentData = itemRefController.get('data') || {};\r\n      itemRefController.set('data', Object.assign(currentData, data));\r\n    } else {\r\n      // Set.\r\n      itemRefController.set('data', data);\r\n    }\r\n  });\r\n\r\n  // Set the inital data.\r\n  if (typeof initialData === 'object') {\r\n    setData(initialData, options);\r\n  }\r\n\r\n  return setData;\r\n}\r\n\r\n// Default options.\r\nuseData.defaultOptions = {merge: false};\r\n", "import {useEffect} from 'react';\r\nimport {useItemContext} from '../contexts';\r\nimport {invariant} from '../invariant';\r\nimport {useRerender} from '../utils/hooks';\r\n\r\n/**\r\n * The useDrag hook re-render item (in which the hook has been called)\r\n * Every time it is dragged/released.\r\n * The hook returns if the item is being dragged.\r\n *\r\n * @returns - If the item is being dragged.\r\n */\r\nexport function useDrag(): boolean {\r\n  const {eventController} = useItemContext();\r\n  const reRender = useRerender();\r\n\r\n  // Check if the hook is called inside an item.\r\n  invariant(\r\n    eventController !== undefined,\r\n    'The useDrag hook can be used only inside an Item'\r\n  );\r\n\r\n  // Enable the event.\r\n  useEffect(() => {\r\n    eventController.enableEvent('drag', reRender);\r\n  }, [eventController, reRender]);\r\n\r\n  return eventController.getPayload('drag') || false;\r\n}\r\n", "import {useItemContext} from '../contexts';\r\nimport {invariant} from '../invariant';\r\nimport {useFunction} from '../utils/hooks';\r\n\r\n// The method returned by the hook.\r\nexport type SetDraggableMethod = (draggable: boolean) => void;\r\n\r\n/**\r\n * The useDraggable hook allow to decide if the item (in which the hook has been called)\r\n * can be dragged or not.\r\n * It returns the setter method.\r\n *\r\n * @returns - The setter method.\r\n */\r\nexport function useDraggable(): SetDraggableMethod {\r\n  const {itemRefController} = useItemContext();\r\n\r\n  // Check if the hook is called inside an item.\r\n  invariant(\r\n    itemRefController !== undefined,\r\n    'The useDraggable hook can be used only inside an Item'\r\n  );\r\n\r\n  const setDraggable = useFunction<SetDraggableMethod>((draggable) => {\r\n    // Set if the item can be dragged.\r\n    itemRefController.set('draggable', !!draggable);\r\n  });\r\n\r\n  return setDraggable;\r\n}\r\n", "import {useEffect} from 'react';\r\nimport {useGridContext, useItemContext} from '../contexts';\r\nimport {invariant} from '../invariant';\r\nimport {useRerender} from '../utils/hooks';\r\nimport type {DecoratedGrid} from '../interfaces';\r\n\r\n// The data returned by the hook.\r\nexport type GridData = {\r\n  id?: string;\r\n  groupIds?: string[];\r\n  grid: DecoratedGrid;\r\n};\r\n\r\n/**\r\n * The useGrid hook return the data of the MuuriComponent parent of the\r\n * item (in which the hook has been called).\r\n *\r\n * @returns - The data of the MuuriComponent.\r\n */\r\nexport function useGrid(): GridData {\r\n  const {eventController} = useItemContext();\r\n  const gridContext = useGridContext();\r\n  const reRender = useRerender();\r\n\r\n  // Check if the hook is called inside an item.\r\n  invariant(\r\n    eventController !== undefined && gridContext.grid !== undefined,\r\n    'The useGrid hook can be used only inside an Item'\r\n  );\r\n\r\n  // The context is not updated when the hook is trigger\r\n  // so we need to get the updated instance from the eventController.\r\n  const grid = eventController.getPayload('send') || gridContext.grid;\r\n\r\n  // Enable the event.\r\n  useEffect(() => {\r\n    eventController.enableEvent('send', reRender);\r\n  }, [eventController, reRender]);\r\n\r\n  return {\r\n    id: grid._component.id,\r\n    groupIds: grid._component.groupIds,\r\n    grid,\r\n  };\r\n}\r\n", "import {useEffect, useCallback} from 'react';\r\nimport {useGridContext, useItemContext} from '../contexts';\r\nimport {invariant} from '../invariant';\r\n\r\n// The method returned by the hook.\r\nexport type RefreshMethod = () => void;\r\n\r\n/**\r\n * The useRefresh hook allow to notify the MuuriComponent that the\r\n * item dimensions are changed, so that it can update the layout.\r\n *\r\n * @param deps - The dependencies.\r\n * @returns - The refresh method.\r\n */\r\nexport function useRefresh(deps: any[] = []): RefreshMethod {\r\n  const {layoutController} = useGridContext();\r\n  const {itemRefController} = useItemContext();\r\n\r\n  // Check if the hook is called inside an item.\r\n  invariant(\r\n    itemRefController !== undefined && layoutController !== undefined,\r\n    'The useRefresh hook can be used only inside an Item'\r\n  );\r\n\r\n  // Because of memoization, The identity of the function is guaranteed\r\n  // to be stable so it will be safe to omit it as a dependency.\r\n  const refresh = useCallback(() => {\r\n    if (!itemRefController.hasItem()) return;\r\n    // Get the item.\r\n    const item = itemRefController.getItem();\r\n    // If the component is rendering within the MuuriComponent.\r\n    layoutController.refreshItem(item);\r\n  }, [layoutController, itemRefController]);\r\n\r\n  useEffect(() => {\r\n    refresh();\r\n  }, deps.concat(refresh)); // eslint-disable-line\r\n\r\n  return refresh;\r\n}\r\n", "import {useEffect} from 'react';\r\nimport {useItemContext} from '../contexts';\r\nimport {invariant} from '../invariant';\r\nimport {useRerender} from '../utils/hooks';\r\n\r\n/**\r\n * The useShow hook allow you to know if the item is showing.\r\n * The item will re-render each time its visibility change.\r\n *\r\n * @returns - If the item is showing.\r\n */\r\nexport function useShow(): boolean | undefined {\r\n  const {eventController} = useItemContext();\r\n  const reRender = useRerender();\r\n\r\n  // Check if the hook is called inside an item.\r\n  invariant(\r\n    eventController !== undefined,\r\n    'The useShow hook can be used only inside an Item'\r\n  );\r\n\r\n  // Enable the event.\r\n  useEffect(() => {\r\n    eventController.enableEvent('show', reRender);\r\n  }, [eventController, reRender]);\r\n\r\n  return eventController.getPayload('show');\r\n}\r\n", "import {useItemContext, useGridContext} from '../contexts';\r\nimport {invariant} from '../invariant';\r\nimport {useFunction} from '../utils/hooks';\r\n\r\n// The method returned by the hook.\r\nexport type SetVisibilityMethod = (\r\n  visible: boolean,\r\n  options?: UseVisibilityOptions\r\n) => void;\r\n\r\n// The options of the hook.\r\nexport type UseVisibilityOptions = {\r\n  /** If the animation should be skipped. */\r\n  instant?: boolean;\r\n};\r\n\r\n/**\r\n * The useVisibility hook allow you to show/hide the item in which the hook has been called.\r\n *\r\n * @returns - The setter method.\r\n */\r\nexport function useVisibility(): SetVisibilityMethod {\r\n  const {layoutController} = useGridContext();\r\n  const {eventController, itemRefController} = useItemContext();\r\n\r\n  // Check if the hook is called inside an item.\r\n  invariant(\r\n    itemRefController !== undefined &&\r\n      layoutController !== undefined &&\r\n      eventController !== undefined,\r\n    'The useVisibility hook can be used only inside an Item'\r\n  );\r\n\r\n  // Set visibility.\r\n  const setVisibility = useFunction<SetVisibilityMethod>((visible, options) => {\r\n    if (!itemRefController.hasItem()) return;\r\n    if (!!visible === eventController.getPayload('show')) return;\r\n\r\n    // Default options.\r\n    options = options || useVisibility.defaultOptions;\r\n\r\n    // Set the visibility.\r\n    layoutController.setItemVisibility(\r\n      itemRefController.getItem(),\r\n      visible,\r\n      options.instant === true\r\n    );\r\n  });\r\n\r\n  return setVisibility;\r\n}\r\n\r\n// Default options.\r\nuseVisibility.defaultOptions = {instant: false};\r\n", "import {invariant} from '../invariant';\r\n\r\n/** Responsive style options. */\r\nexport interface ResponsiveStyleOptions {\r\n  /** Columns value from 0 to 1. */\r\n  columns: number;\r\n  /** Margin. */\r\n  margin?: string | number;\r\n  /** Width / height ratio. */\r\n  ratio?: number;\r\n  /** Height. */\r\n  height?: string | number;\r\n}\r\n\r\n/**\r\n * Get the responsive style.\r\n *\r\n * @param options - The options.\r\n * @returns - The style.\r\n */\r\nexport function getResponsiveStyle(options: ResponsiveStyleOptions) {\r\n  // Check options.\r\n  invariant(typeof options === 'object', 'You must define options');\r\n\r\n  // Check columns.\r\n  invariant(\r\n    typeof options.columns === 'number' &&\r\n      options.columns > 0 &&\r\n      options.columns <= 1,\r\n    'options.columns must be a number between 0 (excluded) and 1 (included)'\r\n  );\r\n\r\n  // Check height and ratio.\r\n  invariant(\r\n    typeof options.ratio === 'number' ||\r\n      typeof options.height === 'number' ||\r\n      typeof options.height === 'string',\r\n    'You must provide at least one option between height and ratio'\r\n  );\r\n\r\n  // Check that the height and the ratio options are not setted togheter.\r\n  invariant(\r\n    typeof options.ratio !== 'number' ||\r\n      (typeof options.height !== 'number' &&\r\n        typeof options.height !== 'string'),\r\n    'You cannot provide both the height and the ratio options'\r\n  );\r\n\r\n  // The margin values.\r\n  const {margin, mStatic, mDynamic} = getResponsiveMargin(\r\n    options.margin || '0px'\r\n  );\r\n  // The item width.\r\n  const {needCalc, width} = getResponsiveWidth(\r\n    options.columns,\r\n    mStatic,\r\n    mDynamic\r\n  );\r\n\r\n  // If ratio is used set The paddingTop\r\n  // instad of the heght, the child element must\r\n  // have \"display: absolute\".\r\n  return options.ratio\r\n    ? {\r\n        width: needCalc ? `calc(${width})` : width,\r\n        paddingTop: getResponsivePaddingTop(width, options.ratio, needCalc),\r\n        height: `0px`,\r\n        borderWidth: '0px',\r\n        margin,\r\n      }\r\n    : {\r\n        width: needCalc ? `calc(${width})` : width,\r\n        paddingTop: `0px`,\r\n        // @ts-ignore\r\n        height: getFixedHeight(options.height),\r\n        borderWidth: '0px',\r\n        margin,\r\n      };\r\n}\r\n\r\n/**\r\n * Get the responsive width.\r\n *\r\n * @param columns - The percentage.\r\n * @param mStatic - The static margin.\r\n * @param mDynamic - The dynamic margin.\r\n * @returns - The width.\r\n */\r\nfunction getResponsiveWidth(\r\n  columns: number,\r\n  mStatic: number,\r\n  mDynamic: number\r\n) {\r\n  const needCalc = mStatic !== 0;\r\n  const rawWidth = columns * 100 - mDynamic;\r\n  const width = needCalc ? `${rawWidth}% - ${mStatic}px` : `${rawWidth}%`;\r\n\r\n  return {needCalc, width};\r\n}\r\n\r\n/**\r\n * Get the responsive paddingTop.\r\n *\r\n * @param width - The width.\r\n * @param ratio - The width/height ratio.\r\n * @param needCalc - If the width need to be surrounded by calc().\r\n * @returns - The paddingTop.\r\n */\r\nfunction getResponsivePaddingTop(\r\n  width: string,\r\n  ratio: number,\r\n  needCalc: boolean\r\n): string {\r\n  return needCalc\r\n    ? `calc((${width}) / ${ratio})`\r\n    : `${parseFloat(width) / ratio}%`;\r\n}\r\n\r\n/**\r\n * Get the fixed height.\r\n *\r\n * @param height - The mixed height.\r\n * @returns - The height string.\r\n */\r\nfunction getFixedHeight(height: string | number): string {\r\n  return typeof height === 'number' ? `${height}px` : height;\r\n}\r\n\r\n/**\r\n * The responsive margin.\r\n *\r\n * @param margin - The margin.\r\n * @returns - The responsive margin.\r\n */\r\nfunction getResponsiveMargin(margin: string | number) {\r\n  if (typeof margin === 'number') margin = `${margin}px`;\r\n  const margins = margin.trim().split(' ');\r\n\r\n  // Margin default values.\r\n  let leftMargin = '0px';\r\n  let rightMargin = '0px';\r\n  let mDynamic = 0;\r\n  let mStatic = 0;\r\n\r\n  // Get the values from the input.\r\n  if (margins.length === 1) {\r\n    leftMargin = rightMargin = margins[0];\r\n  } else if (margins.length === 2) {\r\n    leftMargin = rightMargin = margins[1];\r\n  } else if (margins.length === 3) {\r\n    leftMargin = rightMargin = margins[1];\r\n  } else if (margins.length === 4) {\r\n    leftMargin = margins[3];\r\n    rightMargin = margins[1];\r\n  }\r\n\r\n  // Set dynamic/static margins.\r\n  if (leftMargin.indexOf('%') === -1) mStatic += parseFloat(leftMargin);\r\n  else mDynamic += parseFloat(leftMargin);\r\n  if (rightMargin.indexOf('%') === -1) mStatic += parseFloat(rightMargin);\r\n  else mDynamic += parseFloat(rightMargin);\r\n\r\n  return {\r\n    margin,\r\n    mStatic,\r\n    mDynamic,\r\n  };\r\n}\r\n", "import {invariant} from '../invariant';\r\nimport {getResponsiveStyle} from './getResponsiveStyle';\r\nimport type {DecoratedGrid} from '../interfaces';\r\nimport type {ResponsiveStyleOptions} from './getResponsiveStyle';\r\n\r\n/** Static style options. */\r\nexport interface StaticStyleOptions extends ResponsiveStyleOptions {\r\n  /** Container width, can be a number or a string (e.g. \"100px\"). */\r\n  grid: DecoratedGrid;\r\n}\r\n\r\n/**\r\n * Get the static style.\r\n *\r\n * @param options - The options.\r\n * @returns - The style.\r\n */\r\nexport function getStaticStyle(options: StaticStyleOptions) {\r\n  const style = getResponsiveStyle(options);\r\n\r\n  // Check the options.\r\n  invariant(\r\n    'grid' in options,\r\n    'You mast pass the grid instance to get the static style.'\r\n  );\r\n\r\n  // The sizer element.\r\n  const sizerElement = options.grid.getSizerElement();\r\n\r\n  // Set the style in the sizer.\r\n  Object.assign(sizerElement.style, style);\r\n\r\n  // Get the style from the sizer.\r\n  const {width, height, paddingTop, margin} = window.getComputedStyle(\r\n    sizerElement\r\n  );\r\n\r\n  return {width, height, paddingTop, margin};\r\n}\r\n", "import React from 'react';\r\nimport type {ComponentType} from 'react';\r\nimport * as hooks from '../hooks';\r\nimport {invariant} from '../invariant';\r\n\r\n// Hook names.\r\nconst hooksNames = [\r\n  'useData',\r\n  'useDrag',\r\n  'useDraggable',\r\n  'useGrid',\r\n  'useRefresh',\r\n  'useShow',\r\n  'useVisibility',\r\n] as const;\r\n\r\n// Handler type.\r\ntype HookHandlerType = [\r\n  typeof hooksNames[number],\r\n  <T>(t: T) => {[x: string]: T}\r\n];\r\n\r\n// Hook handlers.\r\nconst HooksHandlers: HookHandlerType[] = [\r\n  ['useData', /*       */ getHandler('setData')],\r\n  ['useDrag', /*       */ getHandler('isDragging')],\r\n  ['useDraggable', /*  */ getHandler('setDraggable')],\r\n  ['useGrid', /*       */ getHandler('gridData')],\r\n  ['useRefresh', /*    */ getHandler('refresh')],\r\n  ['useShow', /*       */ getHandler('isShowing')],\r\n  ['useVisibility', /* */ getHandler('setVisibility')],\r\n];\r\n\r\n/**\r\n * Return the handler with the given key.\r\n *\r\n * @param key - The key.\r\n * @returns - The method.\r\n */\r\nexport function getHandler(key: string): <T>(t: T) => {[x: string]: T} {\r\n  return function handler<T>(payload: T) {\r\n    return {[key]: payload};\r\n  };\r\n}\r\n\r\n/**\r\n * Run all the handlers and merge all the payloads.\r\n *\r\n * @param hooksHandlers - The handlers.\r\n * @returns - The merged payload.\r\n */\r\nfunction getMerged(hooksHandlers: HookHandlerType[]): object {\r\n  return Object.assign(\r\n    {},\r\n    ...hooksHandlers.map(([hookName, handler]) => {\r\n      const payload = hooks[hookName]();\r\n      return handler(payload);\r\n    })\r\n  );\r\n}\r\n\r\n/**\r\n * Item HOC for hooks.\r\n *\r\n * @param Component - The component to wrap.\r\n * @param enabledHooks - The hooks to enable.\r\n * @returns - The wrapped component.\r\n */\r\nexport function withHooks<T extends object>(\r\n  Component: ComponentType<T>,\r\n  enabledHooks: typeof hooksNames[number][]\r\n) {\r\n  // There must be an array of hooks to enable.\r\n  invariant(\r\n    Array.isArray(enabledHooks),\r\n    'An array of hooks name must be provided to wrap an item.'\r\n  );\r\n\r\n  // All the hooks must be valid.\r\n  enabledHooks.forEach((hookName) => {\r\n    invariant(hooksNames.includes(hookName), `Invalid item hook: ${hookName}`);\r\n  });\r\n\r\n  // There must be at least one hook to enable.\r\n  invariant(\r\n    enabledHooks.length !== 0,\r\n    'To wrap an item at least one hook must be provided.'\r\n  );\r\n\r\n  // Get the handlers array of the enabled hook.\r\n  const hooksHandlers = HooksHandlers.filter(([hookName]) =>\r\n    enabledHooks.includes(hookName)\r\n  );\r\n\r\n  // Return the HOC.\r\n  return function WrappedItem(props: T) {\r\n    // The hooks will run in the 'getMerged' method.\r\n    return <Component {...(props as T)} {...getMerged(hooksHandlers)} />;\r\n  };\r\n}\r\n"],
  "mappings": "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",
  "names": ["Element", "module", "module", "module", "module", "module", "module", "is", "i", "checker", "module", "module", "import_muuri", "Muuri", "import_react", "import_prop_types", "import_react", "import_muuri", "import_react", "import_react", "import_react", "key", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "React", "PropTypes", "Muuri", "React", "PropTypes", "import_react", "import_prop_types", "import_muuri", "import_muuri", "Muuri", "element", "import_muuri", "Muuri", "MuuriComponent", "grid", "React", "PropTypes", "Muuri", "setData", "options", "import_react", "import_react", "import_react", "import_react", "import_react", "React", "Muuri"]
}
